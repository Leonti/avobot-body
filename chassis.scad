// Generated by SolidPython 0.4.8 on 2020-08-21 15:56:01
$fn = 200;
use </home/leonti/3d/chassis/lib.scad>
use </home/leonti/3d/openscad_libraries/nutsnbolts/cyl_head_bolt.scad>


union() {
	color(c = [1.0000000000, 1.0000000000, 1.0000000000, 0.9000000000]) {
		difference() {
			cylinder(d = 208, h = 3);
			translate(v = [-35, 70, -1]) {
				cube(size = [70, 40, 5]);
			}
			mirror(v = [0, 1, 0]) {
				translate(v = [-35, 70, -1]) {
					cube(size = [70, 40, 5]);
				}
			}
			union() {
				translate(v = [45, -85, -1]) {
					cylinder(d = 3.5000000000, h = 10);
				}
				translate(v = [87, -45, -1]) {
					cylinder(d = 3.5000000000, h = 10);
				}
				mirror(v = [0, 1, 0]) {
					union() {
						translate(v = [45, -85, -1]) {
							cylinder(d = 3.5000000000, h = 10);
						}
						translate(v = [87, -45, -1]) {
							cylinder(d = 3.5000000000, h = 10);
						}
					}
				}
				union() {
					difference() {
						translate(v = [-52, -77, 4.9000000000]) {
							difference() {
								union() {
									difference() {
										union() {
											cube(size = [10, 30, 4]);
											translate(v = [16, 13, 4]) {
												rotate(a = [0, 0, 150]) {
													cube(size = [10, 37, 10]);
												}
											}
										}
										translate(v = [10, 0, 0]) {
											cube(size = [10, 40, 40]);
										}
									}
									translate(v = [5, 25, 4]) {
										cylinder(d = 10, h = 2);
									}
								}
								translate(v = [5, 5, 6]) {
									cylinder(d = 8, h = 20);
								}
							}
						}
						difference() {
							cylinder(d = 240, h = 64);
							translate(v = [0, 0, -1]) {
								cylinder(d = 217, h = 100);
							}
						}
					}
					translate(v = [-54.5000000000, -86.5000000000, 14]) {
						rotate(a = [90, 90, -30]) {
							cylinder(d = 3.5000000000, h = 30);
						}
					}
					translate(v = [-52, -77, 4.9000000000]) {
						union() {
							translate(v = [5, 5, 2]) {
								union() {
									translate(v = [0, 0, 15]) {
										nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
									}
									translate(v = [0, 0, -20]) {
										cylinder(d = 3.5000000000, h = 20);
									}
								}
							}
							translate(v = [5, 25, 2]) {
								union() {
									translate(v = [0, 0, 15]) {
										nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
									}
									translate(v = [0, 0, -20]) {
										cylinder(d = 3.5000000000, h = 20);
									}
								}
							}
						}
					}
				}
				mirror(v = [0, 1, 0]) {
					union() {
						difference() {
							translate(v = [-52, -77, 4.9000000000]) {
								difference() {
									union() {
										difference() {
											union() {
												cube(size = [10, 30, 4]);
												translate(v = [16, 13, 4]) {
													rotate(a = [0, 0, 150]) {
														cube(size = [10, 37, 10]);
													}
												}
											}
											translate(v = [10, 0, 0]) {
												cube(size = [10, 40, 40]);
											}
										}
										translate(v = [5, 25, 4]) {
											cylinder(d = 10, h = 2);
										}
									}
									translate(v = [5, 5, 6]) {
										cylinder(d = 8, h = 20);
									}
								}
							}
							difference() {
								cylinder(d = 240, h = 64);
								translate(v = [0, 0, -1]) {
									cylinder(d = 217, h = 100);
								}
							}
						}
						translate(v = [-54.5000000000, -86.5000000000, 14]) {
							rotate(a = [90, 90, -30]) {
								cylinder(d = 3.5000000000, h = 30);
							}
						}
						translate(v = [-52, -77, 4.9000000000]) {
							union() {
								translate(v = [5, 5, 2]) {
									union() {
										translate(v = [0, 0, 15]) {
											nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
										}
										translate(v = [0, 0, -20]) {
											cylinder(d = 3.5000000000, h = 20);
										}
									}
								}
								translate(v = [5, 25, 2]) {
									union() {
										translate(v = [0, 0, 15]) {
											nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
										}
										translate(v = [0, 0, -20]) {
											cylinder(d = 3.5000000000, h = 20);
										}
									}
								}
							}
						}
					}
				}
				union() {
					difference() {
						union() {
							translate(v = [-95, -5, 4.9000000000]) {
								difference() {
									union() {
										cube(size = [35, 10, 4]);
										translate(v = [-3.5000000000, 0, 4]) {
											union() {
												cube(size = [20, 10, 10]);
												translate(v = [-10, -7.5000000000, 0]) {
													difference() {
														cube(size = [15, 25, 10]);
														translate(v = [-1, 9.7500000000, -1]) {
															cube(size = [9, 3.5000000000, 20]);
														}
														translate(v = [5.5000000000, -2, 5]) {
															translate(v = [0, 7, 0]) {
																rotate(a = [0, -90, 4]) {
																	union() {
																		translate(v = [-3, -10, 0]) {
																			cube(size = [6, 20, 3]);
																		}
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 27);
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
									translate(v = [-20, 5, -1]) {
										cube(size = [70, 20, 30]);
									}
								}
							}
							mirror(v = [0, 1, 0]) {
								translate(v = [-95, -5, 4.9000000000]) {
									difference() {
										union() {
											cube(size = [35, 10, 4]);
											translate(v = [-3.5000000000, 0, 4]) {
												union() {
													cube(size = [20, 10, 10]);
													translate(v = [-10, -7.5000000000, 0]) {
														difference() {
															cube(size = [15, 25, 10]);
															translate(v = [-1, 9.7500000000, -1]) {
																cube(size = [9, 3.5000000000, 20]);
															}
															translate(v = [5.5000000000, -2, 5]) {
																translate(v = [0, 7, 0]) {
																	rotate(a = [0, -90, 4]) {
																		union() {
																			translate(v = [-3, -10, 0]) {
																				cube(size = [6, 20, 3]);
																			}
																			translate(v = [0, 0, -20]) {
																				cylinder(d = 3.5000000000, h = 27);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										translate(v = [-20, 5, -1]) {
											cube(size = [70, 20, 30]);
										}
									}
								}
							}
							translate(v = [-66, 0, 9]) {
								cylinder(d = 10, h = 2);
							}
						}
						translate(v = [-66, 0, 8]) {
							union() {
								translate(v = [0, 0, 15]) {
									nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
								}
								translate(v = [0, 0, -20]) {
									cylinder(d = 3.5000000000, h = 20);
								}
							}
						}
						difference() {
							cylinder(d = 240, h = 64);
							translate(v = [0, 0, -1]) {
								cylinder(d = 217, h = 100);
							}
						}
					}
					union() {
						translate(v = [-100, -7.2500000000, 14]) {
							rotate(a = [0, -90, 4]) {
								cylinder(d = 3.5000000000, h = 40);
							}
						}
						mirror(v = [0, 1, 0]) {
							translate(v = [-100, -7.2500000000, 14]) {
								rotate(a = [0, -90, 4]) {
									cylinder(d = 3.5000000000, h = 40);
								}
							}
						}
					}
					translate(v = [-66, 0, 8]) {
						union() {
							translate(v = [0, 0, 15]) {
								nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
							}
							translate(v = [0, 0, -20]) {
								cylinder(d = 3.5000000000, h = 20);
							}
						}
					}
				}
			}
			translate(v = [0, -70, 22.5000000000]) {
				rotate(a = [0, 0, 90]) {
					union() {
						translate(v = [10, 0, 0]) {
							difference() {
								translate(v = [0, -24.3500000000, -19.1000000000]) {
									color(c = "red") {
										union() {
											cube(size = [10, 48.7000000000, 31.7000000000]);
											translate(v = [-10.0000000000, 0, 0]) {
												union() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [-10.0000000000, 38.7000000000, 0]) {
												union() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [0, 0, 31.7000000000]) {
												union() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														cylinder(d = 3.5000000000, h = 100);
													}
												}
											}
											translate(v = [0, 38.7500000000, 31.7000000000]) {
												union() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														cylinder(d = 3.5000000000, h = 100);
													}
												}
											}
										}
									}
								}
								rotate(a = [90, 0, 90]) {
									union() {
										translate(v = [0, 0, -1.7500000000]) {
											cylinder(d = 28.7000000000, h = 70);
										}
										translate(v = [-14.3500000000, 0, -1.7500000000]) {
											cube(size = [28.7000000000, 14.3500000000, 70]);
										}
										translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
											cube(size = [30, 1.7500000000, 70]);
										}
									}
								}
							}
						}
						translate(v = [120, 0, 0]) {
							difference() {
								translate(v = [0, -24.3500000000, -19.1000000000]) {
									color(c = "red") {
										union() {
											cube(size = [10, 48.7000000000, 31.7000000000]);
											translate(v = [-10.0000000000, 0, 0]) {
												union() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [-10.0000000000, 38.7000000000, 0]) {
												union() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [0, 0, 31.7000000000]) {
												union() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														cylinder(d = 3.5000000000, h = 100);
													}
												}
											}
											translate(v = [0, 38.7500000000, 31.7000000000]) {
												union() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														cylinder(d = 3.5000000000, h = 100);
													}
												}
											}
										}
									}
								}
								rotate(a = [90, 0, 90]) {
									union() {
										translate(v = [0, 0, -1.7500000000]) {
											cylinder(d = 28.7000000000, h = 70);
										}
										translate(v = [-14.3500000000, 0, -1.7500000000]) {
											cube(size = [28.7000000000, 14.3500000000, 70]);
										}
										translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
											cube(size = [30, 1.7500000000, 70]);
										}
									}
								}
							}
						}
						rotate(a = [90, 0, 90]) {
							translate(v = [0, 0, 1.7500000000]) {
								union() {
									difference() {
										union() {
											translate(v = [0, 0, -1.7500000000]) {
												cylinder(d = 28.7000000000, h = 70);
											}
											translate(v = [-14.3500000000, 0, -1.7500000000]) {
												cube(size = [28.7000000000, 14.3500000000, 70]);
											}
											translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
												cube(size = [30, 1.7500000000, 70]);
											}
										}
										union() {
											translate(v = [0, 0, -10]) {
												cylinder(d = 7, h = 10);
											}
											translate(v = [0, 8.5000000000, -10]) {
												cylinder(d = 3.5000000000, h = 10);
											}
											translate(v = [0, -8.5000000000, -10]) {
												cylinder(d = 3.5000000000, h = 10);
											}
											cylinder(d = 25.2000000000, h = 70);
										}
										translate(v = [-12.6000000000, 0, 0]) {
											cube(size = [25.2000000000, 13.1000000000, 70]);
										}
										translate(v = [-12.6000000000, 0, 5]) {
											cube(size = [25.2000000000, 20, 70]);
										}
									}
									translate(v = [0, 0, 136.5000000000]) {
										rotate(a = [180, 0, 180]) {
											difference() {
												union() {
													translate(v = [0, 0, -1.7500000000]) {
														cylinder(d = 28.7000000000, h = 70);
													}
													translate(v = [-14.3500000000, 0, -1.7500000000]) {
														cube(size = [28.7000000000, 14.3500000000, 70]);
													}
													translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
														cube(size = [30, 1.7500000000, 70]);
													}
												}
												union() {
													translate(v = [0, 0, -10]) {
														cylinder(d = 7, h = 10);
													}
													translate(v = [0, 8.5000000000, -10]) {
														cylinder(d = 3.5000000000, h = 10);
													}
													translate(v = [0, -8.5000000000, -10]) {
														cylinder(d = 3.5000000000, h = 10);
													}
													cylinder(d = 25.2000000000, h = 70);
												}
												translate(v = [-12.6000000000, 0, 0]) {
													cube(size = [25.2000000000, 13.1000000000, 70]);
												}
												translate(v = [-12.6000000000, 0, 5]) {
													cube(size = [25.2000000000, 20, 70]);
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			union() {
				translate(v = [-86, -38, -1]) {
					rotate(a = [0, 0, 24]) {
						translate(v = [3.5000000000, 0, 0]) {
							cylinder(d = 3.5000000000, h = 10);
						}
					}
				}
				mirror(v = [0, 1, 0]) {
					translate(v = [-86, -38, -1]) {
						rotate(a = [0, 0, 24]) {
							translate(v = [3.5000000000, 0, 0]) {
								cylinder(d = 3.5000000000, h = 10);
							}
						}
					}
				}
			}
			translate(v = [-9, 0, 0]) {
				union() {
					translate(v = [100, -37.7500000000, 45]) {
						rotate(a = [0, 0, 90]) {
							union() {
								color(c = "brown") {
									cube(size = [75.5000000000, 144, 14.3000000000]);
								}
								color(c = "black") {
									translate(v = [11, 144, 3]) {
										cube(size = [18, 35, 8]);
									}
								}
								color(c = "black") {
									translate(v = [47, 144, 3]) {
										cube(size = [18, 35, 8]);
									}
								}
								color(c = "black") {
									translate(v = [75, 121, 3]) {
										cube(size = [40, 10, 7]);
									}
								}
							}
						}
					}
					translate(v = [92, -41.7500000000, 3]) {
						union() {
							color(c = [1.0000000000, 1.0000000000, 1.0000000000, 0.7000000000]) {
								difference() {
									union() {
										difference() {
											cube(size = [10, 83.5000000000, 58.3000000000]);
											translate(v = [-1, 2, 42]) {
												cube(size = [10, 75.5000000000, 14.3000000000]);
											}
											translate(v = [-1, 12, 4]) {
												cube(size = [15, 55.5000000000, 30]);
											}
										}
										translate(v = [0, 31.7500000000, 0]) {
											cube(size = [17, 20, 4]);
										}
										union() {
											translate(v = [5, 15, 5]) {
												union() {
													nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
													hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
												}
											}
											translate(v = [5, 64, 5]) {
												union() {
													nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
													hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
												}
											}
											translate(v = [13, 41.7500000000, 5]) {
												union() {
													nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
													hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
												}
											}
										}
										translate(v = [-10, 21.7500000000, 0]) {
											cube(size = [10, 40, 4]);
										}
									}
									translate(v = [0, 41.7500000000, -14]) {
										union() {
											cylinder(d = 17, h = 15);
											translate(v = [0, -8, 0]) {
												cylinder(d = 6.5000000000, h = 15);
											}
											translate(v = [0, 8, 0]) {
												cylinder(d = 6.5000000000, h = 15);
											}
										}
									}
									translate(v = [0, 41.7500000000, 0]) {
										union() {
											translate(v = [0, -8, 0]) {
												cylinder(d = 2.8000000000, h = 20);
											}
											translate(v = [0, 8, 0]) {
												cylinder(d = 2.8000000000, h = 20);
											}
											translate(v = [0, -8, 2]) {
												cylinder(d = 4.5000000000, h = 20);
											}
											translate(v = [0, 8, 2]) {
												cylinder(d = 4.5000000000, h = 20);
											}
										}
									}
								}
							}
							translate(v = [0, 41.7500000000, -14]) {
								union() {
									cylinder(d = 17, h = 15);
									translate(v = [0, -8, 0]) {
										cylinder(d = 6.5000000000, h = 15);
									}
									translate(v = [0, 8, 0]) {
										cylinder(d = 6.5000000000, h = 15);
									}
								}
							}
							translate(v = [0, 41.7500000000, 0]) {
								union() {
									translate(v = [0, -8, 0]) {
										cylinder(d = 2.8000000000, h = 20);
									}
									translate(v = [0, 8, 0]) {
										cylinder(d = 2.8000000000, h = 20);
									}
									translate(v = [0, -8, 2]) {
										cylinder(d = 4.5000000000, h = 20);
									}
									translate(v = [0, 8, 2]) {
										cylinder(d = 4.5000000000, h = 20);
									}
								}
							}
						}
					}
					translate(v = [-35, 41.7500000000, 3]) {
						rotate(a = [0, 0, 180]) {
							difference() {
								union() {
									difference() {
										cube(size = [10, 83.5000000000, 58.3000000000]);
										translate(v = [-1, 2, 42]) {
											cube(size = [10, 75.5000000000, 14.3000000000]);
										}
										translate(v = [-1, 12, 4]) {
											cube(size = [15, 55.5000000000, 30]);
										}
									}
									translate(v = [0, 31.7500000000, 0]) {
										cube(size = [17, 20, 4]);
									}
									union() {
										translate(v = [5, 15, 5]) {
											union() {
												nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
												hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
											}
										}
										translate(v = [5, 64, 5]) {
											union() {
												nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
												hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
											}
										}
										translate(v = [13, 41.7500000000, 5]) {
											union() {
												nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
												hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
											}
										}
									}
								}
								translate(v = [-1, 2, 42]) {
									cube(size = [20, 75.5000000000, 14.3000000000]);
								}
							}
						}
					}
					translate(v = [65, -35.1400000000, 66]) {
						color(c = "grey") {
							union() {
								rotate(a = [90, 0, 180]) {
									import(file = "rplidar.stl", origin = [0, 0]);
								}
								translate(v = [-45, 60, -3]) {
									cube(size = [20, 5, 12]);
								}
							}
						}
					}
					translate(v = [58, -28, 61]) {
						difference() {
							union() {
								translate(v = [0, 0, 0]) {
									difference() {
										cylinder(d = 10, h = 7);
										translate(v = [0, 0, 9]) {
											hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
										}
										translate(v = [0, 0, 2]) {
											cylinder(d = 5.5000000000, h = 10);
										}
									}
								}
								translate(v = [0, 56, 0]) {
									difference() {
										cylinder(d = 10, h = 7);
										translate(v = [0, 0, 9]) {
											hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
										}
										translate(v = [0, 0, 2]) {
											cylinder(d = 5.5000000000, h = 10);
										}
									}
								}
								translate(v = [-70, 8, 0]) {
									difference() {
										cylinder(d = 10, h = 7);
										translate(v = [0, 0, 9]) {
											hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
										}
										translate(v = [0, 0, 2]) {
											cylinder(d = 5.5000000000, h = 10);
										}
									}
								}
								translate(v = [-70, 48, 0]) {
									difference() {
										cylinder(d = 10, h = 7);
										translate(v = [0, 0, 9]) {
											hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
										}
										translate(v = [0, 0, 2]) {
											cylinder(d = 5.5000000000, h = 10);
										}
									}
								}
								translate(v = [-25, -13.7500000000, -18.3000000000]) {
									difference() {
										cube(size = [10, 83.5000000000, 18.3000000000]);
										translate(v = [-1, 4.0000000000, 2]) {
											cube(size = [12, 75.5000000000, 14.3000000000]);
										}
									}
								}
								translate(v = [-75, -13.7500000000, -18.3000000000]) {
									difference() {
										cube(size = [10, 83.5000000000, 18.3000000000]);
										translate(v = [-1, 4.0000000000, 2]) {
											cube(size = [12, 75.5000000000, 14.3000000000]);
										}
									}
								}
								translate(v = [-20, -7.5000000000, -2]) {
									cube(size = [25, 15, 2]);
								}
								translate(v = [-20, 48.5000000000, -2]) {
									cube(size = [25, 15, 2]);
								}
								translate(v = [-70, 20.5000000000, -2]) {
									cube(size = [55, 15, 2]);
								}
							}
							union() {
								translate(v = [0, 0, -20.5000000000]) {
									cylinder(d = 6, h = 20);
								}
								translate(v = [0, 56, -20.5000000000]) {
									cylinder(d = 6, h = 20);
								}
								translate(v = [-70, 8, -20.5000000000]) {
									cylinder(d = 6, h = 20);
								}
								translate(v = [-70, 48, -20.5000000000]) {
									cylinder(d = 6, h = 20);
								}
							}
							union() {
								translate(v = [0, 0, -20]) {
									cylinder(d = 3, h = 30);
								}
								translate(v = [0, 56, -20]) {
									cylinder(d = 3, h = 30);
								}
								translate(v = [-70, 8, -20]) {
									cylinder(d = 3, h = 30);
								}
								translate(v = [-70, 48, -20]) {
									cylinder(d = 3, h = 30);
								}
							}
						}
					}
				}
			}
		}
	}
	translate(v = [0, 0, 0]) {
		union() {
			translate(v = [0, 102.0000000000, 22.5000000000]) {
				rotate(a = [90, 0, 0]) {
					union() {
						color(c = "blue") {
							cylinder(d = 67, h = 27);
						}
						translate(v = [0, 0, 177]) {
							color(c = "blue") {
								cylinder(d = 67, h = 27);
							}
						}
					}
				}
			}
			translate(v = [0, -70, 22.5000000000]) {
				rotate(a = [0, 0, 90]) {
					union() {
						translate(v = [10, 0, 0]) {
							difference() {
								translate(v = [0, -24.3500000000, -19.1000000000]) {
									color(c = "red") {
										union() {
											cube(size = [10, 48.7000000000, 31.7000000000]);
											translate(v = [-10.0000000000, 0, 0]) {
												difference() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [-10.0000000000, 38.7000000000, 0]) {
												difference() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [0, 0, 31.7000000000]) {
												difference() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														union() {
															translate(v = [-3, -10, 0]) {
																cube(size = [6, 20, 3]);
															}
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 27);
															}
														}
													}
												}
											}
											translate(v = [0, 38.7500000000, 31.7000000000]) {
												difference() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														union() {
															translate(v = [-3, -10, 0]) {
																cube(size = [6, 20, 3]);
															}
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 27);
															}
														}
													}
												}
											}
										}
									}
								}
								rotate(a = [90, 0, 90]) {
									union() {
										translate(v = [0, 0, -1.7500000000]) {
											cylinder(d = 28.7000000000, h = 70);
										}
										translate(v = [-14.3500000000, 0, -1.7500000000]) {
											cube(size = [28.7000000000, 14.3500000000, 70]);
										}
										translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
											cube(size = [30, 1.7500000000, 70]);
										}
									}
								}
							}
						}
						translate(v = [120, 0, 0]) {
							difference() {
								translate(v = [0, -24.3500000000, -19.1000000000]) {
									color(c = "red") {
										union() {
											cube(size = [10, 48.7000000000, 31.7000000000]);
											translate(v = [-10.0000000000, 0, 0]) {
												difference() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [-10.0000000000, 38.7000000000, 0]) {
												difference() {
													cube(size = [30, 10, 6]);
													translate(v = [5.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
													translate(v = [25.0000000000, 5.0000000000, 6]) {
														union() {
															nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 20);
															}
														}
													}
												}
											}
											translate(v = [0, 0, 31.7000000000]) {
												difference() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														union() {
															translate(v = [-3, -10, 0]) {
																cube(size = [6, 20, 3]);
															}
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 27);
															}
														}
													}
												}
											}
											translate(v = [0, 38.7500000000, 31.7000000000]) {
												difference() {
													cube(size = [10, 10, 35.2500000000]);
													translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
														union() {
															translate(v = [-3, -10, 0]) {
																cube(size = [6, 20, 3]);
															}
															translate(v = [0, 0, -20]) {
																cylinder(d = 3.5000000000, h = 27);
															}
														}
													}
												}
											}
										}
									}
								}
								rotate(a = [90, 0, 90]) {
									union() {
										translate(v = [0, 0, -1.7500000000]) {
											cylinder(d = 28.7000000000, h = 70);
										}
										translate(v = [-14.3500000000, 0, -1.7500000000]) {
											cube(size = [28.7000000000, 14.3500000000, 70]);
										}
										translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
											cube(size = [30, 1.7500000000, 70]);
										}
									}
								}
							}
						}
						rotate(a = [90, 0, 90]) {
							translate(v = [0, 0, 1.7500000000]) {
								union() {
									difference() {
										union() {
											translate(v = [0, 0, -1.7500000000]) {
												cylinder(d = 28.7000000000, h = 70);
											}
											translate(v = [-14.3500000000, 0, -1.7500000000]) {
												cube(size = [28.7000000000, 14.3500000000, 70]);
											}
											translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
												cube(size = [30, 1.7500000000, 70]);
											}
										}
										union() {
											translate(v = [0, 0, -10]) {
												cylinder(d = 7, h = 10);
											}
											translate(v = [0, 8.5000000000, -10]) {
												cylinder(d = 3.5000000000, h = 10);
											}
											translate(v = [0, -8.5000000000, -10]) {
												cylinder(d = 3.5000000000, h = 10);
											}
											cylinder(d = 25.2000000000, h = 70);
										}
										translate(v = [-12.6000000000, 0, 0]) {
											cube(size = [25.2000000000, 13.1000000000, 70]);
										}
										translate(v = [-12.6000000000, 0, 5]) {
											cube(size = [25.2000000000, 20, 70]);
										}
									}
									translate(v = [0, 0, 136.5000000000]) {
										rotate(a = [180, 0, 180]) {
											difference() {
												union() {
													translate(v = [0, 0, -1.7500000000]) {
														cylinder(d = 28.7000000000, h = 70);
													}
													translate(v = [-14.3500000000, 0, -1.7500000000]) {
														cube(size = [28.7000000000, 14.3500000000, 70]);
													}
													translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
														cube(size = [30, 1.7500000000, 70]);
													}
												}
												union() {
													translate(v = [0, 0, -10]) {
														cylinder(d = 7, h = 10);
													}
													translate(v = [0, 8.5000000000, -10]) {
														cylinder(d = 3.5000000000, h = 10);
													}
													translate(v = [0, -8.5000000000, -10]) {
														cylinder(d = 3.5000000000, h = 10);
													}
													cylinder(d = 25.2000000000, h = 70);
												}
												translate(v = [-12.6000000000, 0, 0]) {
													cube(size = [25.2000000000, 13.1000000000, 70]);
												}
												translate(v = [-12.6000000000, 0, 5]) {
													cube(size = [25.2000000000, 20, 70]);
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	translate(v = [-9, 0, 0]) {
		union() {
			translate(v = [100, -37.7500000000, 45]) {
				rotate(a = [0, 0, 90]) {
					union() {
						color(c = "brown") {
							cube(size = [75.5000000000, 144, 14.3000000000]);
						}
						color(c = "black") {
							translate(v = [11, 144, 3]) {
								cube(size = [18, 35, 8]);
							}
						}
						color(c = "black") {
							translate(v = [47, 144, 3]) {
								cube(size = [18, 35, 8]);
							}
						}
						color(c = "black") {
							translate(v = [75, 121, 3]) {
								cube(size = [40, 10, 7]);
							}
						}
					}
				}
			}
			translate(v = [92, -41.7500000000, 3]) {
				color(c = [1.0000000000, 1.0000000000, 1.0000000000, 0.7000000000]) {
					difference() {
						union() {
							difference() {
								union() {
									difference() {
										cube(size = [10, 83.5000000000, 58.3000000000]);
										translate(v = [-1, 2, 42]) {
											cube(size = [10, 75.5000000000, 14.3000000000]);
										}
										translate(v = [-1, 12, 4]) {
											cube(size = [15, 55.5000000000, 30]);
										}
									}
									translate(v = [0, 31.7500000000, 0]) {
										cube(size = [17, 20, 4]);
									}
								}
								union() {
									translate(v = [5, 15, 5]) {
										union() {
											nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
											hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
										}
									}
									translate(v = [5, 64, 5]) {
										union() {
											nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
											hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
										}
									}
									translate(v = [13, 41.7500000000, 5]) {
										union() {
											nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
											hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
										}
									}
								}
							}
							translate(v = [-10, 21.7500000000, 0]) {
								cube(size = [10, 40, 4]);
							}
						}
						translate(v = [0, 41.7500000000, -14]) {
							union() {
								cylinder(d = 17, h = 15);
								translate(v = [0, -8, 0]) {
									cylinder(d = 6.5000000000, h = 15);
								}
								translate(v = [0, 8, 0]) {
									cylinder(d = 6.5000000000, h = 15);
								}
							}
						}
						translate(v = [0, 41.7500000000, 0]) {
							union() {
								translate(v = [0, -8, 0]) {
									cylinder(d = 2.8000000000, h = 20);
								}
								translate(v = [0, 8, 0]) {
									cylinder(d = 2.8000000000, h = 20);
								}
								translate(v = [0, -8, 2]) {
									cylinder(d = 4.5000000000, h = 20);
								}
								translate(v = [0, 8, 2]) {
									cylinder(d = 4.5000000000, h = 20);
								}
							}
						}
					}
				}
			}
			translate(v = [-35, 41.7500000000, 3]) {
				rotate(a = [0, 0, 180]) {
					difference() {
						union() {
							difference() {
								cube(size = [10, 83.5000000000, 58.3000000000]);
								translate(v = [-1, 2, 42]) {
									cube(size = [10, 75.5000000000, 14.3000000000]);
								}
								translate(v = [-1, 12, 4]) {
									cube(size = [15, 55.5000000000, 30]);
								}
							}
							translate(v = [0, 31.7500000000, 0]) {
								cube(size = [17, 20, 4]);
							}
						}
						union() {
							translate(v = [5, 15, 5]) {
								union() {
									nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
									hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
								}
							}
							translate(v = [5, 64, 5]) {
								union() {
									nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
									hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
								}
							}
							translate(v = [13, 41.7500000000, 5]) {
								union() {
									nutcatch_parallel(clk = 0.5000000000, l = 3, name = "M3");
									hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
								}
							}
						}
						translate(v = [-1, 2, 42]) {
							cube(size = [20, 75.5000000000, 14.3000000000]);
						}
					}
				}
			}
			translate(v = [65, -35.1400000000, 66]) {
				color(c = "grey") {
					union() {
						rotate(a = [90, 0, 180]) {
							import(file = "rplidar.stl", origin = [0, 0]);
						}
						translate(v = [-45, 60, -3]) {
							cube(size = [20, 5, 12]);
						}
					}
				}
			}
			translate(v = [58, -28, 61]) {
				difference() {
					union() {
						translate(v = [0, 0, 0]) {
							difference() {
								cylinder(d = 10, h = 7);
								translate(v = [0, 0, 9]) {
									hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
								}
								translate(v = [0, 0, 2]) {
									cylinder(d = 5.5000000000, h = 10);
								}
							}
						}
						translate(v = [0, 56, 0]) {
							difference() {
								cylinder(d = 10, h = 7);
								translate(v = [0, 0, 9]) {
									hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
								}
								translate(v = [0, 0, 2]) {
									cylinder(d = 5.5000000000, h = 10);
								}
							}
						}
						translate(v = [-70, 8, 0]) {
							difference() {
								cylinder(d = 10, h = 7);
								translate(v = [0, 0, 9]) {
									hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
								}
								translate(v = [0, 0, 2]) {
									cylinder(d = 5.5000000000, h = 10);
								}
							}
						}
						translate(v = [-70, 48, 0]) {
							difference() {
								cylinder(d = 10, h = 7);
								translate(v = [0, 0, 9]) {
									hole_through(cld = 0.5000000000, h = 0, hcld = 0.4000000000, l = 10, name = "M3");
								}
								translate(v = [0, 0, 2]) {
									cylinder(d = 5.5000000000, h = 10);
								}
							}
						}
						translate(v = [-25, -13.7500000000, -18.3000000000]) {
							difference() {
								cube(size = [10, 83.5000000000, 18.3000000000]);
								translate(v = [-1, 4.0000000000, 2]) {
									cube(size = [12, 75.5000000000, 14.3000000000]);
								}
							}
						}
						translate(v = [-75, -13.7500000000, -18.3000000000]) {
							difference() {
								cube(size = [10, 83.5000000000, 18.3000000000]);
								translate(v = [-1, 4.0000000000, 2]) {
									cube(size = [12, 75.5000000000, 14.3000000000]);
								}
							}
						}
						translate(v = [-20, -7.5000000000, -2]) {
							cube(size = [25, 15, 2]);
						}
						translate(v = [-20, 48.5000000000, -2]) {
							cube(size = [25, 15, 2]);
						}
						translate(v = [-70, 20.5000000000, -2]) {
							cube(size = [55, 15, 2]);
						}
					}
					union() {
						translate(v = [0, 0, -20.5000000000]) {
							cylinder(d = 6, h = 20);
						}
						translate(v = [0, 56, -20.5000000000]) {
							cylinder(d = 6, h = 20);
						}
						translate(v = [-70, 8, -20.5000000000]) {
							cylinder(d = 6, h = 20);
						}
						translate(v = [-70, 48, -20.5000000000]) {
							cylinder(d = 6, h = 20);
						}
					}
					union() {
						translate(v = [0, 0, -20]) {
							cylinder(d = 3, h = 30);
						}
						translate(v = [0, 56, -20]) {
							cylinder(d = 3, h = 30);
						}
						translate(v = [-70, 8, -20]) {
							cylinder(d = 3, h = 30);
						}
						translate(v = [-70, 48, -20]) {
							cylinder(d = 3, h = 30);
						}
					}
				}
			}
		}
	}
	translate(v = [26, -75, 3]) {
		union() {
			translate(v = [0, 0, 0]) {
				color(c = [1.0000000000, 1.0000000000, 1.0000000000, 0.7000000000]) {
					difference() {
						union() {
							difference() {
								union() {
									difference() {
										union() {
											difference() {
												union() {
													linear_extrude(height = 2) {
														polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7]], points = [[0, 7], [0, 143], [53, 143], [56, 140], [56, 20], [35, 0], [15, 0], [15, 7]]);
													}
													translate(v = [17, 148, 0]) {
														cylinder(d = 10, h = 5);
													}
													translate(v = [12, 138, 0]) {
														cube(size = [10, 10, 2]);
													}
												}
												translate(v = [17, 148, 2]) {
													union() {
														translate(v = [0, 0, 15]) {
															nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
														}
														translate(v = [0, 0, -20]) {
															cylinder(d = 3.5000000000, h = 20);
														}
													}
												}
											}
											translate(v = [3.5000000000, 81, 2]) {
												union() {
													translate(v = [0, 0]) {
														cylinder(d = 2.5000000000, h = 12);
													}
													translate(v = [0, 58]) {
														cylinder(d = 2.5000000000, h = 12);
													}
													translate(v = [49, 58]) {
														cylinder(d = 2.5000000000, h = 12);
													}
													translate(v = [49, 0]) {
														cylinder(d = 2.5000000000, h = 12);
													}
													union() {
														translate(v = [0, 0]) {
															cylinder(d = 6, h = 6);
														}
														translate(v = [0, 58]) {
															cylinder(d = 6, h = 6);
														}
														translate(v = [49, 58]) {
															cylinder(d = 6, h = 6);
														}
														translate(v = [49, 0]) {
															cylinder(d = 6, h = 6);
														}
													}
												}
											}
											translate(v = [31, 25, 2]) {
												difference() {
													cube(size = [25, 25, 7]);
													translate(v = [3.2500000000, -3, -1]) {
														cube(size = [18.5000000000, 25, 10]);
													}
													translate(v = [1.5000000000, -3, 3]) {
														cube(size = [22, 25, 2.2000000000]);
													}
												}
											}
											translate(v = [48, 55, 2]) {
												cube(size = [8, 49, 4]);
											}
										}
										translate(v = [44, 58, -1]) {
											cube(size = [13, 43, 5]);
										}
									}
									translate(v = [0, 7, 2]) {
										translate(v = [0, 0, -4]) {
											difference() {
												translate(v = [2, 2, -33]) {
													rotate(a = [0, 0, 90]) {
														import(file = "nano_holder.stl", origin = [0, 0]);
													}
												}
												translate(v = [-1, -1, 0]) {
													cube(size = [100, 100, 4]);
												}
											}
										}
									}
									translate(v = [25, 25, 2]) {
										cylinder(d = 10, h = 3);
									}
								}
								translate(v = [25, 25, 2]) {
									union() {
										translate(v = [0, 0, 15]) {
											nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
										}
										translate(v = [0, 0, -20]) {
											cylinder(d = 3.5000000000, h = 20);
										}
									}
								}
							}
							translate(v = [26.5000000000, 12, 2]) {
								difference() {
									union() {
										difference() {
											translate(v = [0, 40, 0]) {
												cylinder(d = 7, h = 10);
											}
											translate(v = [0, 40, 0]) {
												cylinder(d = 2.3000000000, h = 11);
											}
										}
										translate(v = [0, -20, 4]) {
											cylinder(d = 7, h = 6);
										}
										translate(v = [-3, -10, 0]) {
											cube(size = [6, 6, 4]);
										}
										translate(v = [-3, -19, 4]) {
											cube(size = [6, 15, 4]);
										}
									}
									translate(v = [0, -20, 0]) {
										cylinder(d = 2.3000000000, h = 11);
									}
								}
							}
						}
						translate(v = [8, 65, -1]) {
							cube(size = [40, 70, 4]);
						}
					}
				}
			}
			translate(v = [28, 100, 7]) {
				rotate(a = [0, 0, -90]) {
					rpi();
				}
			}
			translate(v = [33, 26, 5]) {
				color(c = "red") {
					cube(size = [20.0500000000, 20.0500000000, 1.6000000000]);
				}
			}
			translate(v = [11, 31, 11]) {
				rotate(a = [0, 0, 90]) {
					import(file = "nano.stl", origin = [0, 0]);
				}
			}
		}
	}
	translate(v = [0, 0, -2.6000000000]) {
		union() {
			translate(v = [0, 0, 7.5000000000]) {
				difference() {
					union() {
						difference() {
							union() {
								difference() {
									cylinder(d = 190, h = 1.5000000000);
									translate(v = [-58.5000000000, -200, -1]) {
										cube(size = [400, 400, 3]);
									}
								}
								translate(v = [-86, -38, 1]) {
									rotate(a = [0, 0, 24]) {
										translate(v = [3.5000000000, -15, 0]) {
											union() {
												translate(v = [0, 5, 0]) {
													cylinder(d = 2.7000000000, h = 5);
												}
												translate(v = [0, 25, 0]) {
													cylinder(d = 2.7000000000, h = 5);
												}
											}
										}
									}
								}
								mirror(v = [0, 1, 0]) {
									translate(v = [-86, -38, 1]) {
										rotate(a = [0, 0, 24]) {
											translate(v = [3.5000000000, -15, 0]) {
												union() {
													translate(v = [0, 5, 0]) {
														cylinder(d = 2.7000000000, h = 5);
													}
													translate(v = [0, 25, 0]) {
														cylinder(d = 2.7000000000, h = 5);
													}
												}
											}
										}
									}
								}
							}
							translate(v = [-86, -38, -1]) {
								rotate(a = [0, 0, 24]) {
									translate(v = [3.5000000000, 0, 0]) {
										cylinder(d = 3.5000000000, h = 10);
									}
								}
							}
							mirror(v = [0, 1, 0]) {
								translate(v = [-86, -38, -1]) {
									rotate(a = [0, 0, 24]) {
										translate(v = [3.5000000000, 0, 0]) {
											cylinder(d = 3.5000000000, h = 10);
										}
									}
								}
							}
						}
						translate(v = [-58.5000000000, -16.5000000000, 5.5000000000]) {
							rotate(a = [0, 0, 180]) {
								color(c = [1.0000000000, 1.0000000000, 1.0000000000, 0.7000000000]) {
									union() {
										translate(v = [2.7000000000, 5.4000000000, 0]) {
											union() {
												cylinder(d = 2.2000000000, h = 7);
												translate(v = [0, 9.2000000000, 0]) {
													cylinder(d = 2.2000000000, h = 7);
												}
											}
										}
										translate(v = [0, -1.5000000000, -1.5000000000]) {
											cube(size = [10.7000000000, 23, 1.5000000000]);
										}
										translate(v = [0, -6, -4]) {
											cube(size = [10.7000000000, 6, 2.5000000000]);
										}
										translate(v = [0, 20, -4]) {
											cube(size = [10.7000000000, 6, 2.5000000000]);
										}
									}
								}
							}
						}
						mirror(v = [0, 1, 0]) {
							translate(v = [-58.5000000000, -16.5000000000, 5.5000000000]) {
								rotate(a = [0, 0, 180]) {
									color(c = [1.0000000000, 1.0000000000, 1.0000000000, 0.7000000000]) {
										union() {
											translate(v = [2.7000000000, 5.4000000000, 0]) {
												union() {
													cylinder(d = 2.2000000000, h = 7);
													translate(v = [0, 9.2000000000, 0]) {
														cylinder(d = 2.2000000000, h = 7);
													}
												}
											}
											translate(v = [0, -1.5000000000, -1.5000000000]) {
												cube(size = [10.7000000000, 23, 1.5000000000]);
											}
											translate(v = [0, -6, -4]) {
												cube(size = [10.7000000000, 6, 2.5000000000]);
											}
											translate(v = [0, 20, -4]) {
												cube(size = [10.7000000000, 6, 2.5000000000]);
											}
										}
									}
								}
							}
						}
					}
					translate(v = [-70, -10.5000000000, -1]) {
						cube(size = [40, 21, 40]);
					}
				}
			}
			color(c = "green") {
				union() {
					difference() {
						union() {
							difference() {
								cylinder(d = 220, h = 9);
								translate(v = [0, 0, -0.1000000000]) {
									cylinder(d = 217, h = 7.6000000000);
								}
								translate(v = [0, 0, -1]) {
									cylinder(d = 200, h = 20);
								}
							}
							translate(v = [0, 0, 0]) {
								difference() {
									cylinder(d = 226, h = 1.5000000000);
									translate(v = [0, 0, -1]) {
										cylinder(d = 220, h = 20);
									}
									translate(v = [-40, -200, -1]) {
										cube(size = [400, 400, 5]);
									}
								}
							}
						}
						translate(v = [-37, -200, -1]) {
							cube(size = [400, 400, 20]);
						}
						translate(v = [-120, -5, -1]) {
							cube(size = [400, 400, 20]);
						}
					}
					translate(v = [-70.5000000000, -55, 9]) {
						rotate(a = [0, 0, 24]) {
							union() {
								cube(size = [2, 44, 10]);
								translate(v = [-20, 0, 0]) {
									difference() {
										cube(size = [20, 44, 2]);
										translate(v = [3, 3, -1]) {
											cube(size = [27, 38, 4]);
										}
									}
								}
								translate(v = [0, 20, 0]) {
									cube(size = [17, 4, 1.8000000000]);
								}
							}
						}
					}
				}
			}
			color(c = "green") {
				mirror(v = [0, 1, 0]) {
					union() {
						difference() {
							union() {
								difference() {
									cylinder(d = 220, h = 9);
									translate(v = [0, 0, -0.1000000000]) {
										cylinder(d = 217, h = 7.6000000000);
									}
									translate(v = [0, 0, -1]) {
										cylinder(d = 200, h = 20);
									}
								}
								translate(v = [0, 0, 0]) {
									difference() {
										cylinder(d = 226, h = 1.5000000000);
										translate(v = [0, 0, -1]) {
											cylinder(d = 220, h = 20);
										}
										translate(v = [-40, -200, -1]) {
											cube(size = [400, 400, 5]);
										}
									}
								}
							}
							translate(v = [-37, -200, -1]) {
								cube(size = [400, 400, 20]);
							}
							translate(v = [-120, -5, -1]) {
								cube(size = [400, 400, 20]);
							}
						}
						translate(v = [-70.5000000000, -55, 9]) {
							rotate(a = [0, 0, 24]) {
								union() {
									cube(size = [2, 44, 10]);
									translate(v = [-20, 0, 0]) {
										difference() {
											cube(size = [20, 44, 2]);
											translate(v = [3, 3, -1]) {
												cube(size = [27, 38, 4]);
											}
										}
									}
									translate(v = [0, 20, 0]) {
										cube(size = [17, 4, 1.8000000000]);
									}
								}
							}
						}
					}
				}
			}
			translate(v = [-58.5000000000, -16.5000000000, 13]) {
				rotate(a = [0, 0, 180]) {
					difference() {
						union() {
							color(c = "black") {
								cube(size = [10.7000000000, 20, 6.4000000000]);
							}
							color(c = "red") {
								translate(v = [17.5000000000, 16.4000000000, 0.7000000000]) {
									cylinder(d = 4.7000000000, h = 5);
								}
							}
						}
						translate(v = [2.7000000000, 5.4000000000, -1]) {
							cylinder(d = 2.4000000000, h = 10);
						}
						translate(v = [2.7000000000, 14.6000000000, -1]) {
							cylinder(d = 2.4000000000, h = 10);
						}
					}
				}
			}
			mirror(v = [0, 1, 0]) {
				translate(v = [-58.5000000000, -16.5000000000, 13]) {
					rotate(a = [0, 0, 180]) {
						difference() {
							union() {
								color(c = "black") {
									cube(size = [10.7000000000, 20, 6.4000000000]);
								}
								color(c = "red") {
									translate(v = [17.5000000000, 16.4000000000, 0.7000000000]) {
										cylinder(d = 4.7000000000, h = 5);
									}
								}
							}
							translate(v = [2.7000000000, 5.4000000000, -1]) {
								cylinder(d = 2.4000000000, h = 10);
							}
							translate(v = [2.7000000000, 14.6000000000, -1]) {
								cylinder(d = 2.4000000000, h = 10);
							}
						}
					}
				}
			}
			translate(v = [-86, -38, 9]) {
				rotate(a = [0, 0, 24]) {
					difference() {
						union() {
							translate(v = [0, -15, 0]) {
								cube(size = [7, 30, 2.5000000000]);
							}
							translate(v = [4, -24, 2.5000000000]) {
								union() {
									cube(size = [3, 12, 1.5000000000]);
									translate(v = [0, 0, 0]) {
										rotate(a = [0, 0, -15]) {
											cube(size = [10, 2.8000000000, 1.5000000000]);
										}
									}
								}
							}
							translate(v = [4, 24.5000000000, 2.5000000000]) {
								mirror(v = [0, 1, 0]) {
									union() {
										cube(size = [3, 12, 1.5000000000]);
										translate(v = [0, 0, 0]) {
											rotate(a = [0, 0, -15]) {
												cube(size = [10, 2.8000000000, 1.5000000000]);
											}
										}
									}
								}
							}
						}
						translate(v = [3.5000000000, -15, -1]) {
							union() {
								translate(v = [0, 5, 0]) {
									cylinder(d = 3.2000000000, h = 10);
								}
								translate(v = [0, 15, 0]) {
									cylinder(d = 3.5000000000, h = 10);
								}
								translate(v = [0, 25, 0]) {
									cylinder(d = 3.2000000000, h = 10);
								}
							}
						}
					}
				}
			}
			mirror(v = [0, 1, 0]) {
				translate(v = [-86, -38, 9]) {
					rotate(a = [0, 0, 24]) {
						difference() {
							union() {
								translate(v = [0, -15, 0]) {
									cube(size = [7, 30, 2.5000000000]);
								}
								translate(v = [4, -24, 2.5000000000]) {
									union() {
										cube(size = [3, 12, 1.5000000000]);
										translate(v = [0, 0, 0]) {
											rotate(a = [0, 0, -15]) {
												cube(size = [10, 2.8000000000, 1.5000000000]);
											}
										}
									}
								}
								translate(v = [4, 24.5000000000, 2.5000000000]) {
									mirror(v = [0, 1, 0]) {
										union() {
											cube(size = [3, 12, 1.5000000000]);
											translate(v = [0, 0, 0]) {
												rotate(a = [0, 0, -15]) {
													cube(size = [10, 2.8000000000, 1.5000000000]);
												}
											}
										}
									}
								}
							}
							translate(v = [3.5000000000, -15, -1]) {
								union() {
									translate(v = [0, 5, 0]) {
										cylinder(d = 3.2000000000, h = 10);
									}
									translate(v = [0, 15, 0]) {
										cylinder(d = 3.5000000000, h = 10);
									}
									translate(v = [0, 25, 0]) {
										cylinder(d = 3.2000000000, h = 10);
									}
								}
							}
						}
					}
				}
			}
		}
	}
	translate(v = [0, 0, -1.5000000000]) {
		union() {
			difference() {
				cylinder(d = 220, h = 6.5000000000);
				translate(v = [-140, 0, -1]) {
					cube(size = [300, 150, 10]);
				}
				translate(v = [-140, -140, -1]) {
					cube(size = [150, 150, 10]);
				}
				translate(v = [0, -140, -1]) {
					cube(size = [35, 150, 10]);
				}
				translate(v = [0, 0, -1]) {
					cylinder(d = 208, h = 8);
				}
			}
			difference() {
				cylinder(d = 208, h = 1.5000000000);
				translate(v = [-140, 0, -1]) {
					cube(size = [300, 150, 5]);
				}
				translate(v = [-140, -140, -1]) {
					cube(size = [150, 150, 5]);
				}
				translate(v = [0, -140, -1]) {
					cube(size = [35, 150, 5]);
				}
				translate(v = [0, -80, -1]) {
					cube(size = [82, 81, 5]);
				}
				translate(v = [0, -40, -1]) {
					cube(size = [97, 41, 5]);
				}
				translate(v = [0, -11, -1]) {
					cube(size = [102, 12, 5]);
				}
				union() {
					translate(v = [45, -85, -1]) {
						cylinder(d = 3.5000000000, h = 10);
					}
					translate(v = [87, -45, -1]) {
						cylinder(d = 3.5000000000, h = 10);
					}
				}
			}
			translate(v = [0, 0, 5]) {
				difference() {
					cylinder(d = 208, h = 1.5000000000);
					translate(v = [-140, 0, -1]) {
						cube(size = [300, 150, 5]);
					}
					translate(v = [-140, -140, -1]) {
						cube(size = [150, 150, 5]);
					}
					translate(v = [0, -140, -1]) {
						cube(size = [35, 150, 5]);
					}
					translate(v = [0, -80, -1]) {
						cube(size = [82, 81, 5]);
					}
					translate(v = [0, -40, -1]) {
						cube(size = [97, 41, 5]);
					}
					translate(v = [0, -11, -1]) {
						cube(size = [102, 12, 5]);
					}
					union() {
						translate(v = [45, -85, -1]) {
							cylinder(d = 3.5000000000, h = 10);
						}
						translate(v = [87, -45, -1]) {
							cylinder(d = 3.5000000000, h = 10);
						}
					}
				}
			}
			translate(v = [45, -85, 6.5000000000]) {
				difference() {
					cylinder(d = 9, h = 3);
					translate(v = [0, 0, 4]) {
						nutcatch_parallel(clk = 0.6000000000, l = 10, name = "M3");
					}
				}
			}
			translate(v = [87, -45, 6.5000000000]) {
				difference() {
					cylinder(d = 9, h = 3);
					translate(v = [0, 0, 4]) {
						nutcatch_parallel(clk = 0.6000000000, l = 10, name = "M3");
					}
				}
			}
			union() {
				difference() {
					union() {
						translate(v = [0, 0, 6.5000000000]) {
							difference() {
								cylinder(d = 220, h = 64);
								translate(v = [-140, 0, -1]) {
									cube(size = [300, 150, 100]);
								}
								translate(v = [-140, -140, -1]) {
									cube(size = [150, 150, 100]);
								}
								translate(v = [0, -140, -1]) {
									cube(size = [35, 150, 100]);
								}
								translate(v = [0, 0, -1]) {
									cylinder(d = 217, h = 100);
								}
							}
						}
						translate(v = [101.5000000000, -1.5000000000, 6.5000000000]) {
							difference() {
								cube(size = [7.5000000000, 1.5000000000, 64]);
								translate(v = [-0.5000000000, -2, 0]) {
									cube(size = [2, 5, 6]);
								}
							}
						}
					}
					translate(v = [105, 1, 25]) {
						rotate(a = [90, 0, 0]) {
							union() {
								cylinder(d = 3.5000000000, h = 50);
								translate(v = [0, 0, 10]) {
									cylinder(d = 4.5000000000, h = 40);
								}
							}
						}
					}
					translate(v = [105, 1, 55]) {
						rotate(a = [90, 0, 0]) {
							union() {
								cylinder(d = 3.5000000000, h = 50);
								translate(v = [0, 0, 10]) {
									cylinder(d = 4.5000000000, h = 40);
								}
							}
						}
					}
				}
				translate(v = [0, 0, 70.5000000000]) {
					union() {
						difference() {
							cylinder(d = 220, h = 1.5000000000);
							translate(v = [0, 0, -1]) {
								cylinder(d = 202, h = 8);
							}
							translate(v = [-140, 0, -1]) {
								cube(size = [300, 150, 10]);
							}
							translate(v = [-140, -140, -1]) {
								cube(size = [150, 150, 10]);
							}
							translate(v = [0, -140, -1]) {
								cube(size = [35, 150, 10]);
							}
							union() {
								translate(v = [103, -20, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
								translate(v = [68, -80, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
								translate(v = [45, -94.5000000000, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
							}
						}
						union() {
							translate(v = [103, -20, -3]) {
								difference() {
									cylinder(d = 10, h = 3);
									translate(v = [0, 0, -1]) {
										union() {
											translate(v = [0, 0, 15]) {
												nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
											}
											translate(v = [0, 0, -20]) {
												cylinder(d = 3.5000000000, h = 20);
											}
										}
									}
								}
							}
							translate(v = [68, -80, -3]) {
								difference() {
									cylinder(d = 10, h = 3);
									translate(v = [0, 0, -1]) {
										union() {
											translate(v = [0, 0, 15]) {
												nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
											}
											translate(v = [0, 0, -20]) {
												cylinder(d = 3.5000000000, h = 20);
											}
										}
									}
								}
							}
							translate(v = [45, -94.5000000000, -3]) {
								difference() {
									cylinder(d = 10, h = 3);
									translate(v = [0, 0, -1]) {
										union() {
											translate(v = [0, 0, 15]) {
												nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
											}
											translate(v = [0, 0, -20]) {
												cylinder(d = 3.5000000000, h = 20);
											}
										}
									}
								}
							}
						}
					}
				}
			}
			mirror(v = [0, 1, 0]) {
				union() {
					difference() {
						cylinder(d = 220, h = 6.5000000000);
						translate(v = [-140, 0, -1]) {
							cube(size = [300, 150, 10]);
						}
						translate(v = [-140, -140, -1]) {
							cube(size = [150, 150, 10]);
						}
						translate(v = [0, -140, -1]) {
							cube(size = [35, 150, 10]);
						}
						translate(v = [0, 0, -1]) {
							cylinder(d = 208, h = 8);
						}
					}
					difference() {
						cylinder(d = 208, h = 1.5000000000);
						translate(v = [-140, 0, -1]) {
							cube(size = [300, 150, 5]);
						}
						translate(v = [-140, -140, -1]) {
							cube(size = [150, 150, 5]);
						}
						translate(v = [0, -140, -1]) {
							cube(size = [35, 150, 5]);
						}
						translate(v = [0, -80, -1]) {
							cube(size = [82, 81, 5]);
						}
						translate(v = [0, -40, -1]) {
							cube(size = [97, 41, 5]);
						}
						translate(v = [0, -11, -1]) {
							cube(size = [102, 12, 5]);
						}
						union() {
							translate(v = [45, -85, -1]) {
								cylinder(d = 3.5000000000, h = 10);
							}
							translate(v = [87, -45, -1]) {
								cylinder(d = 3.5000000000, h = 10);
							}
						}
					}
					translate(v = [0, 0, 5]) {
						difference() {
							cylinder(d = 208, h = 1.5000000000);
							translate(v = [-140, 0, -1]) {
								cube(size = [300, 150, 5]);
							}
							translate(v = [-140, -140, -1]) {
								cube(size = [150, 150, 5]);
							}
							translate(v = [0, -140, -1]) {
								cube(size = [35, 150, 5]);
							}
							translate(v = [0, -80, -1]) {
								cube(size = [82, 81, 5]);
							}
							translate(v = [0, -40, -1]) {
								cube(size = [97, 41, 5]);
							}
							translate(v = [0, -11, -1]) {
								cube(size = [102, 12, 5]);
							}
							union() {
								translate(v = [45, -85, -1]) {
									cylinder(d = 3.5000000000, h = 10);
								}
								translate(v = [87, -45, -1]) {
									cylinder(d = 3.5000000000, h = 10);
								}
							}
						}
					}
					translate(v = [45, -85, 6.5000000000]) {
						difference() {
							cylinder(d = 9, h = 3);
							translate(v = [0, 0, 4]) {
								nutcatch_parallel(clk = 0.6000000000, l = 10, name = "M3");
							}
						}
					}
					translate(v = [87, -45, 6.5000000000]) {
						difference() {
							cylinder(d = 9, h = 3);
							translate(v = [0, 0, 4]) {
								nutcatch_parallel(clk = 0.6000000000, l = 10, name = "M3");
							}
						}
					}
					union() {
						difference() {
							union() {
								translate(v = [0, 0, 6.5000000000]) {
									difference() {
										cylinder(d = 220, h = 64);
										translate(v = [-140, 0, -1]) {
											cube(size = [300, 150, 100]);
										}
										translate(v = [-140, -140, -1]) {
											cube(size = [150, 150, 100]);
										}
										translate(v = [0, -140, -1]) {
											cube(size = [35, 150, 100]);
										}
										translate(v = [0, 0, -1]) {
											cylinder(d = 217, h = 100);
										}
									}
								}
								translate(v = [101.5000000000, -1.5000000000, 6.5000000000]) {
									difference() {
										cube(size = [7.5000000000, 1.5000000000, 64]);
										translate(v = [-0.5000000000, -2, 0]) {
											cube(size = [2, 5, 6]);
										}
									}
								}
							}
							translate(v = [105, 1, 25]) {
								rotate(a = [90, 0, 0]) {
									union() {
										cylinder(d = 3.5000000000, h = 50);
										translate(v = [0, 0, 10]) {
											cylinder(d = 4.5000000000, h = 40);
										}
									}
								}
							}
							translate(v = [105, 1, 55]) {
								rotate(a = [90, 0, 0]) {
									union() {
										cylinder(d = 3.5000000000, h = 50);
										translate(v = [0, 0, 10]) {
											cylinder(d = 4.5000000000, h = 40);
										}
									}
								}
							}
						}
						translate(v = [0, 0, 70.5000000000]) {
							union() {
								difference() {
									cylinder(d = 220, h = 1.5000000000);
									translate(v = [0, 0, -1]) {
										cylinder(d = 202, h = 8);
									}
									translate(v = [-140, 0, -1]) {
										cube(size = [300, 150, 10]);
									}
									translate(v = [-140, -140, -1]) {
										cube(size = [150, 150, 10]);
									}
									translate(v = [0, -140, -1]) {
										cube(size = [35, 150, 10]);
									}
									union() {
										translate(v = [103, -20, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
										translate(v = [68, -80, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
										translate(v = [45, -94.5000000000, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
									}
								}
								union() {
									translate(v = [103, -20, -3]) {
										difference() {
											cylinder(d = 10, h = 3);
											translate(v = [0, 0, -1]) {
												union() {
													translate(v = [0, 0, 15]) {
														nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
													}
													translate(v = [0, 0, -20]) {
														cylinder(d = 3.5000000000, h = 20);
													}
												}
											}
										}
									}
									translate(v = [68, -80, -3]) {
										difference() {
											cylinder(d = 10, h = 3);
											translate(v = [0, 0, -1]) {
												union() {
													translate(v = [0, 0, 15]) {
														nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
													}
													translate(v = [0, 0, -20]) {
														cylinder(d = 3.5000000000, h = 20);
													}
												}
											}
										}
									}
									translate(v = [45, -94.5000000000, -3]) {
										difference() {
											cylinder(d = 10, h = 3);
											translate(v = [0, 0, -1]) {
												union() {
													translate(v = [0, 0, 15]) {
														nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
													}
													translate(v = [0, 0, -20]) {
														cylinder(d = 3.5000000000, h = 20);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			translate(v = [0, 0, 72]) {
				difference() {
					cylinder(d = 220, h = 1.5000000000);
					translate(v = [-195, -125, -1]) {
						cube(size = [250, 250, 4]);
					}
					union() {
						translate(v = [103, -20, -1]) {
							cylinder(d = 3.5000000000, h = 4);
						}
						translate(v = [68, -80, -1]) {
							cylinder(d = 3.5000000000, h = 4);
						}
						translate(v = [45, -94.5000000000, -1]) {
							cylinder(d = 3.5000000000, h = 4);
						}
					}
					mirror(v = [0, 1, 0]) {
						union() {
							translate(v = [103, -20, -1]) {
								cylinder(d = 3.5000000000, h = 4);
							}
							translate(v = [68, -80, -1]) {
								cylinder(d = 3.5000000000, h = 4);
							}
							translate(v = [45, -94.5000000000, -1]) {
								cylinder(d = 3.5000000000, h = 4);
							}
						}
					}
				}
			}
			difference() {
				mirror(v = [0, 1, 0]) {
					difference() {
						translate(v = [0, 0, 72]) {
							difference() {
								cylinder(d = 220, h = 1.5000000000);
								translate(v = [55, -125, -1]) {
									cube(size = [250, 250, 4]);
								}
								mirror(v = [1, 0, 0]) {
									translate(v = [55, -125, -1]) {
										cube(size = [250, 250, 4]);
									}
								}
								translate(v = [-125, -210.0000000000, -1]) {
									cube(size = [250, 250, 4]);
								}
								mirror(v = [0, 1, 0]) {
									union() {
										translate(v = [103, -20, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
										translate(v = [68, -80, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
										translate(v = [45, -94.5000000000, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
									}
								}
								mirror(v = [1, 0, 0]) {
									mirror(v = [0, 1, 0]) {
										union() {
											translate(v = [103, -20, -1]) {
												cylinder(d = 3.5000000000, h = 4);
											}
											translate(v = [68, -80, -1]) {
												cylinder(d = 3.5000000000, h = 4);
											}
											translate(v = [45, -94.5000000000, -1]) {
												cylinder(d = 3.5000000000, h = 4);
											}
										}
									}
								}
							}
						}
						translate(v = [0, -70, 22.5000000000]) {
							rotate(a = [0, 0, 90]) {
								union() {
									translate(v = [10, 0, 0]) {
										difference() {
											translate(v = [0, -24.3500000000, -19.1000000000]) {
												color(c = "red") {
													union() {
														cube(size = [10, 48.7000000000, 31.7000000000]);
														translate(v = [-10.0000000000, 0, 0]) {
															union() {
																cube(size = [30, 10, 6]);
																translate(v = [5.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
																translate(v = [25.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
															}
														}
														translate(v = [-10.0000000000, 38.7000000000, 0]) {
															union() {
																cube(size = [30, 10, 6]);
																translate(v = [5.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
																translate(v = [25.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
															}
														}
														translate(v = [0, 0, 31.7000000000]) {
															union() {
																cube(size = [10, 10, 35.2500000000]);
																translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
																	cylinder(d = 3.5000000000, h = 100);
																}
															}
														}
														translate(v = [0, 38.7500000000, 31.7000000000]) {
															union() {
																cube(size = [10, 10, 35.2500000000]);
																translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
																	cylinder(d = 3.5000000000, h = 100);
																}
															}
														}
													}
												}
											}
											rotate(a = [90, 0, 90]) {
												union() {
													translate(v = [0, 0, -1.7500000000]) {
														cylinder(d = 28.7000000000, h = 70);
													}
													translate(v = [-14.3500000000, 0, -1.7500000000]) {
														cube(size = [28.7000000000, 14.3500000000, 70]);
													}
													translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
														cube(size = [30, 1.7500000000, 70]);
													}
												}
											}
										}
									}
									translate(v = [120, 0, 0]) {
										difference() {
											translate(v = [0, -24.3500000000, -19.1000000000]) {
												color(c = "red") {
													union() {
														cube(size = [10, 48.7000000000, 31.7000000000]);
														translate(v = [-10.0000000000, 0, 0]) {
															union() {
																cube(size = [30, 10, 6]);
																translate(v = [5.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
																translate(v = [25.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
															}
														}
														translate(v = [-10.0000000000, 38.7000000000, 0]) {
															union() {
																cube(size = [30, 10, 6]);
																translate(v = [5.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
																translate(v = [25.0000000000, 5.0000000000, 6]) {
																	union() {
																		nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 20);
																		}
																	}
																}
															}
														}
														translate(v = [0, 0, 31.7000000000]) {
															union() {
																cube(size = [10, 10, 35.2500000000]);
																translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
																	cylinder(d = 3.5000000000, h = 100);
																}
															}
														}
														translate(v = [0, 38.7500000000, 31.7000000000]) {
															union() {
																cube(size = [10, 10, 35.2500000000]);
																translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
																	cylinder(d = 3.5000000000, h = 100);
																}
															}
														}
													}
												}
											}
											rotate(a = [90, 0, 90]) {
												union() {
													translate(v = [0, 0, -1.7500000000]) {
														cylinder(d = 28.7000000000, h = 70);
													}
													translate(v = [-14.3500000000, 0, -1.7500000000]) {
														cube(size = [28.7000000000, 14.3500000000, 70]);
													}
													translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
														cube(size = [30, 1.7500000000, 70]);
													}
												}
											}
										}
									}
									rotate(a = [90, 0, 90]) {
										translate(v = [0, 0, 1.7500000000]) {
											union() {
												difference() {
													union() {
														translate(v = [0, 0, -1.7500000000]) {
															cylinder(d = 28.7000000000, h = 70);
														}
														translate(v = [-14.3500000000, 0, -1.7500000000]) {
															cube(size = [28.7000000000, 14.3500000000, 70]);
														}
														translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
															cube(size = [30, 1.7500000000, 70]);
														}
													}
													union() {
														translate(v = [0, 0, -10]) {
															cylinder(d = 7, h = 10);
														}
														translate(v = [0, 8.5000000000, -10]) {
															cylinder(d = 3.5000000000, h = 10);
														}
														translate(v = [0, -8.5000000000, -10]) {
															cylinder(d = 3.5000000000, h = 10);
														}
														cylinder(d = 25.2000000000, h = 70);
													}
													translate(v = [-12.6000000000, 0, 0]) {
														cube(size = [25.2000000000, 13.1000000000, 70]);
													}
													translate(v = [-12.6000000000, 0, 5]) {
														cube(size = [25.2000000000, 20, 70]);
													}
												}
												translate(v = [0, 0, 136.5000000000]) {
													rotate(a = [180, 0, 180]) {
														difference() {
															union() {
																translate(v = [0, 0, -1.7500000000]) {
																	cylinder(d = 28.7000000000, h = 70);
																}
																translate(v = [-14.3500000000, 0, -1.7500000000]) {
																	cube(size = [28.7000000000, 14.3500000000, 70]);
																}
																translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
																	cube(size = [30, 1.7500000000, 70]);
																}
															}
															union() {
																translate(v = [0, 0, -10]) {
																	cylinder(d = 7, h = 10);
																}
																translate(v = [0, 8.5000000000, -10]) {
																	cylinder(d = 3.5000000000, h = 10);
																}
																translate(v = [0, -8.5000000000, -10]) {
																	cylinder(d = 3.5000000000, h = 10);
																}
																cylinder(d = 25.2000000000, h = 70);
															}
															translate(v = [-12.6000000000, 0, 0]) {
																cube(size = [25.2000000000, 13.1000000000, 70]);
															}
															translate(v = [-12.6000000000, 0, 5]) {
																cube(size = [25.2000000000, 20, 70]);
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				translate(v = [45, -80, 71]) {
					cylinder(d = 6.2000000000, h = 4);
				}
				translate(v = [45, -70, 71]) {
					cylinder(d = 5, h = 4);
				}
			}
			difference() {
				translate(v = [0, 0, 72]) {
					difference() {
						cylinder(d = 220, h = 1.5000000000);
						translate(v = [55, -125, -1]) {
							cube(size = [250, 250, 4]);
						}
						mirror(v = [1, 0, 0]) {
							translate(v = [55, -125, -1]) {
								cube(size = [250, 250, 4]);
							}
						}
						translate(v = [-125, -210.0000000000, -1]) {
							cube(size = [250, 250, 4]);
						}
						mirror(v = [0, 1, 0]) {
							union() {
								translate(v = [103, -20, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
								translate(v = [68, -80, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
								translate(v = [45, -94.5000000000, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
							}
						}
						mirror(v = [1, 0, 0]) {
							mirror(v = [0, 1, 0]) {
								union() {
									translate(v = [103, -20, -1]) {
										cylinder(d = 3.5000000000, h = 4);
									}
									translate(v = [68, -80, -1]) {
										cylinder(d = 3.5000000000, h = 4);
									}
									translate(v = [45, -94.5000000000, -1]) {
										cylinder(d = 3.5000000000, h = 4);
									}
								}
							}
						}
					}
				}
				translate(v = [0, -70, 22.5000000000]) {
					rotate(a = [0, 0, 90]) {
						union() {
							translate(v = [10, 0, 0]) {
								difference() {
									translate(v = [0, -24.3500000000, -19.1000000000]) {
										color(c = "red") {
											union() {
												cube(size = [10, 48.7000000000, 31.7000000000]);
												translate(v = [-10.0000000000, 0, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [-10.0000000000, 38.7000000000, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [0, 0, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
												translate(v = [0, 38.7500000000, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
											}
										}
									}
									rotate(a = [90, 0, 90]) {
										union() {
											translate(v = [0, 0, -1.7500000000]) {
												cylinder(d = 28.7000000000, h = 70);
											}
											translate(v = [-14.3500000000, 0, -1.7500000000]) {
												cube(size = [28.7000000000, 14.3500000000, 70]);
											}
											translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
												cube(size = [30, 1.7500000000, 70]);
											}
										}
									}
								}
							}
							translate(v = [120, 0, 0]) {
								difference() {
									translate(v = [0, -24.3500000000, -19.1000000000]) {
										color(c = "red") {
											union() {
												cube(size = [10, 48.7000000000, 31.7000000000]);
												translate(v = [-10.0000000000, 0, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [-10.0000000000, 38.7000000000, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [0, 0, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
												translate(v = [0, 38.7500000000, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
											}
										}
									}
									rotate(a = [90, 0, 90]) {
										union() {
											translate(v = [0, 0, -1.7500000000]) {
												cylinder(d = 28.7000000000, h = 70);
											}
											translate(v = [-14.3500000000, 0, -1.7500000000]) {
												cube(size = [28.7000000000, 14.3500000000, 70]);
											}
											translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
												cube(size = [30, 1.7500000000, 70]);
											}
										}
									}
								}
							}
							rotate(a = [90, 0, 90]) {
								translate(v = [0, 0, 1.7500000000]) {
									union() {
										difference() {
											union() {
												translate(v = [0, 0, -1.7500000000]) {
													cylinder(d = 28.7000000000, h = 70);
												}
												translate(v = [-14.3500000000, 0, -1.7500000000]) {
													cube(size = [28.7000000000, 14.3500000000, 70]);
												}
												translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
													cube(size = [30, 1.7500000000, 70]);
												}
											}
											union() {
												translate(v = [0, 0, -10]) {
													cylinder(d = 7, h = 10);
												}
												translate(v = [0, 8.5000000000, -10]) {
													cylinder(d = 3.5000000000, h = 10);
												}
												translate(v = [0, -8.5000000000, -10]) {
													cylinder(d = 3.5000000000, h = 10);
												}
												cylinder(d = 25.2000000000, h = 70);
											}
											translate(v = [-12.6000000000, 0, 0]) {
												cube(size = [25.2000000000, 13.1000000000, 70]);
											}
											translate(v = [-12.6000000000, 0, 5]) {
												cube(size = [25.2000000000, 20, 70]);
											}
										}
										translate(v = [0, 0, 136.5000000000]) {
											rotate(a = [180, 0, 180]) {
												difference() {
													union() {
														translate(v = [0, 0, -1.7500000000]) {
															cylinder(d = 28.7000000000, h = 70);
														}
														translate(v = [-14.3500000000, 0, -1.7500000000]) {
															cube(size = [28.7000000000, 14.3500000000, 70]);
														}
														translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
															cube(size = [30, 1.7500000000, 70]);
														}
													}
													union() {
														translate(v = [0, 0, -10]) {
															cylinder(d = 7, h = 10);
														}
														translate(v = [0, 8.5000000000, -10]) {
															cylinder(d = 3.5000000000, h = 10);
														}
														translate(v = [0, -8.5000000000, -10]) {
															cylinder(d = 3.5000000000, h = 10);
														}
														cylinder(d = 25.2000000000, h = 70);
													}
													translate(v = [-12.6000000000, 0, 0]) {
														cube(size = [25.2000000000, 13.1000000000, 70]);
													}
													translate(v = [-12.6000000000, 0, 5]) {
														cube(size = [25.2000000000, 20, 70]);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			mirror(v = [1, 0, 0]) {
				translate(v = [0, 0, 72]) {
					difference() {
						cylinder(d = 220, h = 1.5000000000);
						translate(v = [-195, -125, -1]) {
							cube(size = [250, 250, 4]);
						}
						union() {
							translate(v = [103, -20, -1]) {
								cylinder(d = 3.5000000000, h = 4);
							}
							translate(v = [68, -80, -1]) {
								cylinder(d = 3.5000000000, h = 4);
							}
							translate(v = [45, -94.5000000000, -1]) {
								cylinder(d = 3.5000000000, h = 4);
							}
						}
						mirror(v = [0, 1, 0]) {
							union() {
								translate(v = [103, -20, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
								translate(v = [68, -80, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
								translate(v = [45, -94.5000000000, -1]) {
									cylinder(d = 3.5000000000, h = 4);
								}
							}
						}
					}
				}
			}
			difference() {
				translate(v = [-52, -77, 4.9000000000]) {
					difference() {
						union() {
							difference() {
								union() {
									cube(size = [10, 30, 4]);
									translate(v = [16, 13, 4]) {
										rotate(a = [0, 0, 150]) {
											cube(size = [10, 37, 10]);
										}
									}
								}
								translate(v = [10, 0, 0]) {
									cube(size = [10, 40, 40]);
								}
							}
							translate(v = [5, 25, 4]) {
								cylinder(d = 10, h = 2);
							}
						}
						translate(v = [5, 5, 6]) {
							cylinder(d = 8, h = 20);
						}
					}
				}
				difference() {
					cylinder(d = 240, h = 64);
					translate(v = [0, 0, -1]) {
						cylinder(d = 217, h = 100);
					}
				}
				translate(v = [-54.5000000000, -86.5000000000, 14]) {
					rotate(a = [90, 90, -30]) {
						union() {
							translate(v = [-3, -10, 0]) {
								cube(size = [6, 20, 3]);
							}
							translate(v = [0, 0, -20]) {
								cylinder(d = 3.5000000000, h = 27);
							}
						}
					}
				}
				translate(v = [-52, -77, 4.9000000000]) {
					union() {
						translate(v = [5, 5, 2]) {
							union() {
								translate(v = [0, 0, 15]) {
									nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
								}
								translate(v = [0, 0, -20]) {
									cylinder(d = 3.5000000000, h = 20);
								}
							}
						}
						translate(v = [5, 25, 2]) {
							union() {
								translate(v = [0, 0, 15]) {
									nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
								}
								translate(v = [0, 0, -20]) {
									cylinder(d = 3.5000000000, h = 20);
								}
							}
						}
					}
				}
			}
			mirror(v = [0, 1, 0]) {
				difference() {
					translate(v = [-52, -77, 4.9000000000]) {
						difference() {
							union() {
								difference() {
									union() {
										cube(size = [10, 30, 4]);
										translate(v = [16, 13, 4]) {
											rotate(a = [0, 0, 150]) {
												cube(size = [10, 37, 10]);
											}
										}
									}
									translate(v = [10, 0, 0]) {
										cube(size = [10, 40, 40]);
									}
								}
								translate(v = [5, 25, 4]) {
									cylinder(d = 10, h = 2);
								}
							}
							translate(v = [5, 5, 6]) {
								cylinder(d = 8, h = 20);
							}
						}
					}
					difference() {
						cylinder(d = 240, h = 64);
						translate(v = [0, 0, -1]) {
							cylinder(d = 217, h = 100);
						}
					}
					translate(v = [-54.5000000000, -86.5000000000, 14]) {
						rotate(a = [90, 90, -30]) {
							union() {
								translate(v = [-3, -10, 0]) {
									cube(size = [6, 20, 3]);
								}
								translate(v = [0, 0, -20]) {
									cylinder(d = 3.5000000000, h = 27);
								}
							}
						}
					}
					translate(v = [-52, -77, 4.9000000000]) {
						union() {
							translate(v = [5, 5, 2]) {
								union() {
									translate(v = [0, 0, 15]) {
										nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
									}
									translate(v = [0, 0, -20]) {
										cylinder(d = 3.5000000000, h = 20);
									}
								}
							}
							translate(v = [5, 25, 2]) {
								union() {
									translate(v = [0, 0, 15]) {
										nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
									}
									translate(v = [0, 0, -20]) {
										cylinder(d = 3.5000000000, h = 20);
									}
								}
							}
						}
					}
				}
			}
			difference() {
				mirror(v = [1, 0, 0]) {
					union() {
						difference() {
							union() {
								translate(v = [0, 0, 6.5000000000]) {
									difference() {
										cylinder(d = 220, h = 64);
										translate(v = [-140, 0, -1]) {
											cube(size = [300, 150, 100]);
										}
										translate(v = [-140, -140, -1]) {
											cube(size = [150, 150, 100]);
										}
										translate(v = [0, -140, -1]) {
											cube(size = [35, 150, 100]);
										}
										translate(v = [0, 0, -1]) {
											cylinder(d = 217, h = 100);
										}
									}
								}
								translate(v = [101.5000000000, -1.5000000000, 6.5000000000]) {
									difference() {
										cube(size = [7.5000000000, 1.5000000000, 64]);
										translate(v = [-0.5000000000, -2, 0]) {
											cube(size = [2, 5, 6]);
										}
									}
								}
							}
							translate(v = [105, 1, 25]) {
								rotate(a = [90, 0, 0]) {
									union() {
										cylinder(d = 3.5000000000, h = 50);
										translate(v = [0, 0, 10]) {
											cylinder(d = 4.5000000000, h = 40);
										}
									}
								}
							}
							translate(v = [105, 1, 55]) {
								rotate(a = [90, 0, 0]) {
									union() {
										cylinder(d = 3.5000000000, h = 50);
										translate(v = [0, 0, 10]) {
											cylinder(d = 4.5000000000, h = 40);
										}
									}
								}
							}
						}
						translate(v = [0, 0, 70.5000000000]) {
							union() {
								difference() {
									cylinder(d = 220, h = 1.5000000000);
									translate(v = [0, 0, -1]) {
										cylinder(d = 202, h = 8);
									}
									translate(v = [-140, 0, -1]) {
										cube(size = [300, 150, 10]);
									}
									translate(v = [-140, -140, -1]) {
										cube(size = [150, 150, 10]);
									}
									translate(v = [0, -140, -1]) {
										cube(size = [35, 150, 10]);
									}
									union() {
										translate(v = [103, -20, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
										translate(v = [68, -80, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
										translate(v = [45, -94.5000000000, -1]) {
											cylinder(d = 3.5000000000, h = 4);
										}
									}
								}
								union() {
									translate(v = [103, -20, -3]) {
										difference() {
											cylinder(d = 10, h = 3);
											translate(v = [0, 0, -1]) {
												union() {
													translate(v = [0, 0, 15]) {
														nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
													}
													translate(v = [0, 0, -20]) {
														cylinder(d = 3.5000000000, h = 20);
													}
												}
											}
										}
									}
									translate(v = [68, -80, -3]) {
										difference() {
											cylinder(d = 10, h = 3);
											translate(v = [0, 0, -1]) {
												union() {
													translate(v = [0, 0, 15]) {
														nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
													}
													translate(v = [0, 0, -20]) {
														cylinder(d = 3.5000000000, h = 20);
													}
												}
											}
										}
									}
									translate(v = [45, -94.5000000000, -3]) {
										difference() {
											cylinder(d = 10, h = 3);
											translate(v = [0, 0, -1]) {
												union() {
													translate(v = [0, 0, 15]) {
														nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
													}
													translate(v = [0, 0, -20]) {
														cylinder(d = 3.5000000000, h = 20);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				cylinder(d = 230, h = 9);
				union() {
					difference() {
						translate(v = [-52, -77, 4.9000000000]) {
							difference() {
								union() {
									difference() {
										union() {
											cube(size = [10, 30, 4]);
											translate(v = [16, 13, 4]) {
												rotate(a = [0, 0, 150]) {
													cube(size = [10, 37, 10]);
												}
											}
										}
										translate(v = [10, 0, 0]) {
											cube(size = [10, 40, 40]);
										}
									}
									translate(v = [5, 25, 4]) {
										cylinder(d = 10, h = 2);
									}
								}
								translate(v = [5, 5, 6]) {
									cylinder(d = 8, h = 20);
								}
							}
						}
						difference() {
							cylinder(d = 240, h = 64);
							translate(v = [0, 0, -1]) {
								cylinder(d = 217, h = 100);
							}
						}
					}
					translate(v = [-54.5000000000, -86.5000000000, 14]) {
						rotate(a = [90, 90, -30]) {
							cylinder(d = 3.5000000000, h = 30);
						}
					}
					translate(v = [-52, -77, 4.9000000000]) {
						union() {
							translate(v = [5, 5, 2]) {
								union() {
									translate(v = [0, 0, 15]) {
										nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
									}
									translate(v = [0, 0, -20]) {
										cylinder(d = 3.5000000000, h = 20);
									}
								}
							}
							translate(v = [5, 25, 2]) {
								union() {
									translate(v = [0, 0, 15]) {
										nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
									}
									translate(v = [0, 0, -20]) {
										cylinder(d = 3.5000000000, h = 20);
									}
								}
							}
						}
					}
				}
				union() {
					difference() {
						union() {
							translate(v = [-95, -5, 4.9000000000]) {
								difference() {
									union() {
										cube(size = [35, 10, 4]);
										translate(v = [-3.5000000000, 0, 4]) {
											union() {
												cube(size = [20, 10, 10]);
												translate(v = [-10, -7.5000000000, 0]) {
													difference() {
														cube(size = [15, 25, 10]);
														translate(v = [-1, 9.7500000000, -1]) {
															cube(size = [9, 3.5000000000, 20]);
														}
														translate(v = [5.5000000000, -2, 5]) {
															translate(v = [0, 7, 0]) {
																rotate(a = [0, -90, 4]) {
																	union() {
																		translate(v = [-3, -10, 0]) {
																			cube(size = [6, 20, 3]);
																		}
																		translate(v = [0, 0, -20]) {
																			cylinder(d = 3.5000000000, h = 27);
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
									translate(v = [-20, 5, -1]) {
										cube(size = [70, 20, 30]);
									}
								}
							}
							mirror(v = [0, 1, 0]) {
								translate(v = [-95, -5, 4.9000000000]) {
									difference() {
										union() {
											cube(size = [35, 10, 4]);
											translate(v = [-3.5000000000, 0, 4]) {
												union() {
													cube(size = [20, 10, 10]);
													translate(v = [-10, -7.5000000000, 0]) {
														difference() {
															cube(size = [15, 25, 10]);
															translate(v = [-1, 9.7500000000, -1]) {
																cube(size = [9, 3.5000000000, 20]);
															}
															translate(v = [5.5000000000, -2, 5]) {
																translate(v = [0, 7, 0]) {
																	rotate(a = [0, -90, 4]) {
																		union() {
																			translate(v = [-3, -10, 0]) {
																				cube(size = [6, 20, 3]);
																			}
																			translate(v = [0, 0, -20]) {
																				cylinder(d = 3.5000000000, h = 27);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										translate(v = [-20, 5, -1]) {
											cube(size = [70, 20, 30]);
										}
									}
								}
							}
							translate(v = [-66, 0, 9]) {
								cylinder(d = 10, h = 2);
							}
						}
						translate(v = [-66, 0, 8]) {
							union() {
								translate(v = [0, 0, 15]) {
									nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
								}
								translate(v = [0, 0, -20]) {
									cylinder(d = 3.5000000000, h = 20);
								}
							}
						}
						difference() {
							cylinder(d = 240, h = 64);
							translate(v = [0, 0, -1]) {
								cylinder(d = 217, h = 100);
							}
						}
					}
					union() {
						translate(v = [-100, -7.2500000000, 14]) {
							rotate(a = [0, -90, 4]) {
								cylinder(d = 3.5000000000, h = 40);
							}
						}
						mirror(v = [0, 1, 0]) {
							translate(v = [-100, -7.2500000000, 14]) {
								rotate(a = [0, -90, 4]) {
									cylinder(d = 3.5000000000, h = 40);
								}
							}
						}
					}
					translate(v = [-66, 0, 8]) {
						union() {
							translate(v = [0, 0, 15]) {
								nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
							}
							translate(v = [0, 0, -20]) {
								cylinder(d = 3.5000000000, h = 20);
							}
						}
					}
				}
			}
			mirror(v = [0, 1, 0]) {
				difference() {
					mirror(v = [1, 0, 0]) {
						union() {
							difference() {
								union() {
									translate(v = [0, 0, 6.5000000000]) {
										difference() {
											cylinder(d = 220, h = 64);
											translate(v = [-140, 0, -1]) {
												cube(size = [300, 150, 100]);
											}
											translate(v = [-140, -140, -1]) {
												cube(size = [150, 150, 100]);
											}
											translate(v = [0, -140, -1]) {
												cube(size = [35, 150, 100]);
											}
											translate(v = [0, 0, -1]) {
												cylinder(d = 217, h = 100);
											}
										}
									}
									translate(v = [101.5000000000, -1.5000000000, 6.5000000000]) {
										difference() {
											cube(size = [7.5000000000, 1.5000000000, 64]);
											translate(v = [-0.5000000000, -2, 0]) {
												cube(size = [2, 5, 6]);
											}
										}
									}
								}
								translate(v = [105, 1, 25]) {
									rotate(a = [90, 0, 0]) {
										union() {
											cylinder(d = 3.5000000000, h = 50);
											translate(v = [0, 0, 10]) {
												cylinder(d = 4.5000000000, h = 40);
											}
										}
									}
								}
								translate(v = [105, 1, 55]) {
									rotate(a = [90, 0, 0]) {
										union() {
											cylinder(d = 3.5000000000, h = 50);
											translate(v = [0, 0, 10]) {
												cylinder(d = 4.5000000000, h = 40);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 70.5000000000]) {
								union() {
									difference() {
										cylinder(d = 220, h = 1.5000000000);
										translate(v = [0, 0, -1]) {
											cylinder(d = 202, h = 8);
										}
										translate(v = [-140, 0, -1]) {
											cube(size = [300, 150, 10]);
										}
										translate(v = [-140, -140, -1]) {
											cube(size = [150, 150, 10]);
										}
										translate(v = [0, -140, -1]) {
											cube(size = [35, 150, 10]);
										}
										union() {
											translate(v = [103, -20, -1]) {
												cylinder(d = 3.5000000000, h = 4);
											}
											translate(v = [68, -80, -1]) {
												cylinder(d = 3.5000000000, h = 4);
											}
											translate(v = [45, -94.5000000000, -1]) {
												cylinder(d = 3.5000000000, h = 4);
											}
										}
									}
									union() {
										translate(v = [103, -20, -3]) {
											difference() {
												cylinder(d = 10, h = 3);
												translate(v = [0, 0, -1]) {
													union() {
														translate(v = [0, 0, 15]) {
															nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
														}
														translate(v = [0, 0, -20]) {
															cylinder(d = 3.5000000000, h = 20);
														}
													}
												}
											}
										}
										translate(v = [68, -80, -3]) {
											difference() {
												cylinder(d = 10, h = 3);
												translate(v = [0, 0, -1]) {
													union() {
														translate(v = [0, 0, 15]) {
															nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
														}
														translate(v = [0, 0, -20]) {
															cylinder(d = 3.5000000000, h = 20);
														}
													}
												}
											}
										}
										translate(v = [45, -94.5000000000, -3]) {
											difference() {
												cylinder(d = 10, h = 3);
												translate(v = [0, 0, -1]) {
													union() {
														translate(v = [0, 0, 15]) {
															nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
														}
														translate(v = [0, 0, -20]) {
															cylinder(d = 3.5000000000, h = 20);
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					cylinder(d = 230, h = 9);
					union() {
						difference() {
							translate(v = [-52, -77, 4.9000000000]) {
								difference() {
									union() {
										difference() {
											union() {
												cube(size = [10, 30, 4]);
												translate(v = [16, 13, 4]) {
													rotate(a = [0, 0, 150]) {
														cube(size = [10, 37, 10]);
													}
												}
											}
											translate(v = [10, 0, 0]) {
												cube(size = [10, 40, 40]);
											}
										}
										translate(v = [5, 25, 4]) {
											cylinder(d = 10, h = 2);
										}
									}
									translate(v = [5, 5, 6]) {
										cylinder(d = 8, h = 20);
									}
								}
							}
							difference() {
								cylinder(d = 240, h = 64);
								translate(v = [0, 0, -1]) {
									cylinder(d = 217, h = 100);
								}
							}
						}
						translate(v = [-54.5000000000, -86.5000000000, 14]) {
							rotate(a = [90, 90, -30]) {
								cylinder(d = 3.5000000000, h = 30);
							}
						}
						translate(v = [-52, -77, 4.9000000000]) {
							union() {
								translate(v = [5, 5, 2]) {
									union() {
										translate(v = [0, 0, 15]) {
											nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
										}
										translate(v = [0, 0, -20]) {
											cylinder(d = 3.5000000000, h = 20);
										}
									}
								}
								translate(v = [5, 25, 2]) {
									union() {
										translate(v = [0, 0, 15]) {
											nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
										}
										translate(v = [0, 0, -20]) {
											cylinder(d = 3.5000000000, h = 20);
										}
									}
								}
							}
						}
					}
					union() {
						difference() {
							union() {
								translate(v = [-95, -5, 4.9000000000]) {
									difference() {
										union() {
											cube(size = [35, 10, 4]);
											translate(v = [-3.5000000000, 0, 4]) {
												union() {
													cube(size = [20, 10, 10]);
													translate(v = [-10, -7.5000000000, 0]) {
														difference() {
															cube(size = [15, 25, 10]);
															translate(v = [-1, 9.7500000000, -1]) {
																cube(size = [9, 3.5000000000, 20]);
															}
															translate(v = [5.5000000000, -2, 5]) {
																translate(v = [0, 7, 0]) {
																	rotate(a = [0, -90, 4]) {
																		union() {
																			translate(v = [-3, -10, 0]) {
																				cube(size = [6, 20, 3]);
																			}
																			translate(v = [0, 0, -20]) {
																				cylinder(d = 3.5000000000, h = 27);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										translate(v = [-20, 5, -1]) {
											cube(size = [70, 20, 30]);
										}
									}
								}
								mirror(v = [0, 1, 0]) {
									translate(v = [-95, -5, 4.9000000000]) {
										difference() {
											union() {
												cube(size = [35, 10, 4]);
												translate(v = [-3.5000000000, 0, 4]) {
													union() {
														cube(size = [20, 10, 10]);
														translate(v = [-10, -7.5000000000, 0]) {
															difference() {
																cube(size = [15, 25, 10]);
																translate(v = [-1, 9.7500000000, -1]) {
																	cube(size = [9, 3.5000000000, 20]);
																}
																translate(v = [5.5000000000, -2, 5]) {
																	translate(v = [0, 7, 0]) {
																		rotate(a = [0, -90, 4]) {
																			union() {
																				translate(v = [-3, -10, 0]) {
																					cube(size = [6, 20, 3]);
																				}
																				translate(v = [0, 0, -20]) {
																					cylinder(d = 3.5000000000, h = 27);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
											translate(v = [-20, 5, -1]) {
												cube(size = [70, 20, 30]);
											}
										}
									}
								}
								translate(v = [-66, 0, 9]) {
									cylinder(d = 10, h = 2);
								}
							}
							translate(v = [-66, 0, 8]) {
								union() {
									translate(v = [0, 0, 15]) {
										nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
									}
									translate(v = [0, 0, -20]) {
										cylinder(d = 3.5000000000, h = 20);
									}
								}
							}
							difference() {
								cylinder(d = 240, h = 64);
								translate(v = [0, 0, -1]) {
									cylinder(d = 217, h = 100);
								}
							}
						}
						union() {
							translate(v = [-100, -7.2500000000, 14]) {
								rotate(a = [0, -90, 4]) {
									cylinder(d = 3.5000000000, h = 40);
								}
							}
							mirror(v = [0, 1, 0]) {
								translate(v = [-100, -7.2500000000, 14]) {
									rotate(a = [0, -90, 4]) {
										cylinder(d = 3.5000000000, h = 40);
									}
								}
							}
						}
						translate(v = [-66, 0, 8]) {
							union() {
								translate(v = [0, 0, 15]) {
									nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
								}
								translate(v = [0, 0, -20]) {
									cylinder(d = 3.5000000000, h = 20);
								}
							}
						}
					}
				}
			}
			difference() {
				union() {
					translate(v = [-95, -5, 4.9000000000]) {
						difference() {
							union() {
								cube(size = [35, 10, 4]);
								translate(v = [-3.5000000000, 0, 4]) {
									union() {
										cube(size = [20, 10, 10]);
										translate(v = [-10, -7.5000000000, 0]) {
											difference() {
												cube(size = [15, 25, 10]);
												translate(v = [-1, 9.7500000000, -1]) {
													cube(size = [9, 3.5000000000, 20]);
												}
												translate(v = [5.5000000000, -2, 5]) {
													translate(v = [0, 7, 0]) {
														rotate(a = [0, -90, 4]) {
															union() {
																translate(v = [-3, -10, 0]) {
																	cube(size = [6, 20, 3]);
																}
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 27);
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
							translate(v = [-20, 5, -1]) {
								cube(size = [70, 20, 30]);
							}
						}
					}
					mirror(v = [0, 1, 0]) {
						translate(v = [-95, -5, 4.9000000000]) {
							difference() {
								union() {
									cube(size = [35, 10, 4]);
									translate(v = [-3.5000000000, 0, 4]) {
										union() {
											cube(size = [20, 10, 10]);
											translate(v = [-10, -7.5000000000, 0]) {
												difference() {
													cube(size = [15, 25, 10]);
													translate(v = [-1, 9.7500000000, -1]) {
														cube(size = [9, 3.5000000000, 20]);
													}
													translate(v = [5.5000000000, -2, 5]) {
														translate(v = [0, 7, 0]) {
															rotate(a = [0, -90, 4]) {
																union() {
																	translate(v = [-3, -10, 0]) {
																		cube(size = [6, 20, 3]);
																	}
																	translate(v = [0, 0, -20]) {
																		cylinder(d = 3.5000000000, h = 27);
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								translate(v = [-20, 5, -1]) {
									cube(size = [70, 20, 30]);
								}
							}
						}
					}
					translate(v = [-66, 0, 9]) {
						cylinder(d = 10, h = 2);
					}
				}
				translate(v = [-66, 0, 8]) {
					union() {
						translate(v = [0, 0, 15]) {
							nutcatch_parallel(clk = 0.6000000000, l = 15, name = "M3");
						}
						translate(v = [0, 0, -20]) {
							cylinder(d = 3.5000000000, h = 20);
						}
					}
				}
				difference() {
					cylinder(d = 240, h = 64);
					translate(v = [0, 0, -1]) {
						cylinder(d = 217, h = 100);
					}
				}
			}
			difference() {
				translate(v = [22, 0, 73.5000000000]) {
					union() {
						difference() {
							union() {
								translate(v = [-67, -40, 0]) {
									difference() {
										cube(size = [105, 80, 34]);
										translate(v = [1.5000000000, 1.5000000000, -1]) {
											cube(size = [102, 77, 33.5000000000]);
										}
									}
								}
								translate(v = [-82, -60, 0]) {
									difference() {
										cube(size = [120, 120, 1.5000000000]);
										translate(v = [16, 21.5000000000, -1]) {
											cube(size = [105, 77, 10]);
										}
									}
								}
							}
							translate(v = [-1, 0, 30]) {
								cylinder(d = 75, h = 7);
							}
						}
						translate(v = [-67, -46, 28]) {
							cube(size = [105, 6, 6]);
						}
						translate(v = [-67, 40, 28]) {
							cube(size = [105, 6, 6]);
						}
					}
				}
				translate(v = [0, -70, 22.5000000000]) {
					rotate(a = [0, 0, 90]) {
						union() {
							translate(v = [10, 0, 0]) {
								difference() {
									translate(v = [0, -24.3500000000, -19.1000000000]) {
										color(c = "red") {
											union() {
												cube(size = [10, 48.7000000000, 31.7000000000]);
												translate(v = [-10.0000000000, 0, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [-10.0000000000, 38.7000000000, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [0, 0, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
												translate(v = [0, 38.7500000000, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
											}
										}
									}
									rotate(a = [90, 0, 90]) {
										union() {
											translate(v = [0, 0, -1.7500000000]) {
												cylinder(d = 28.7000000000, h = 70);
											}
											translate(v = [-14.3500000000, 0, -1.7500000000]) {
												cube(size = [28.7000000000, 14.3500000000, 70]);
											}
											translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
												cube(size = [30, 1.7500000000, 70]);
											}
										}
									}
								}
							}
							translate(v = [120, 0, 0]) {
								difference() {
									translate(v = [0, -24.3500000000, -19.1000000000]) {
										color(c = "red") {
											union() {
												cube(size = [10, 48.7000000000, 31.7000000000]);
												translate(v = [-10.0000000000, 0, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [-10.0000000000, 38.7000000000, 0]) {
													union() {
														cube(size = [30, 10, 6]);
														translate(v = [5.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
														translate(v = [25.0000000000, 5.0000000000, 6]) {
															union() {
																nutcatch_parallel(clk = 0.6000000000, l = 2, name = "M3");
																translate(v = [0, 0, -20]) {
																	cylinder(d = 3.5000000000, h = 20);
																}
															}
														}
													}
												}
												translate(v = [0, 0, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
												translate(v = [0, 38.7500000000, 31.7000000000]) {
													union() {
														cube(size = [10, 10, 35.2500000000]);
														translate(v = [5.0000000000, 5.0000000000, 29.5000000000]) {
															cylinder(d = 3.5000000000, h = 100);
														}
													}
												}
											}
										}
									}
									rotate(a = [90, 0, 90]) {
										union() {
											translate(v = [0, 0, -1.7500000000]) {
												cylinder(d = 28.7000000000, h = 70);
											}
											translate(v = [-14.3500000000, 0, -1.7500000000]) {
												cube(size = [28.7000000000, 14.3500000000, 70]);
											}
											translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
												cube(size = [30, 1.7500000000, 70]);
											}
										}
									}
								}
							}
							rotate(a = [90, 0, 90]) {
								translate(v = [0, 0, 1.7500000000]) {
									union() {
										difference() {
											union() {
												translate(v = [0, 0, -1.7500000000]) {
													cylinder(d = 28.7000000000, h = 70);
												}
												translate(v = [-14.3500000000, 0, -1.7500000000]) {
													cube(size = [28.7000000000, 14.3500000000, 70]);
												}
												translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
													cube(size = [30, 1.7500000000, 70]);
												}
											}
											union() {
												translate(v = [0, 0, -10]) {
													cylinder(d = 7, h = 10);
												}
												translate(v = [0, 8.5000000000, -10]) {
													cylinder(d = 3.5000000000, h = 10);
												}
												translate(v = [0, -8.5000000000, -10]) {
													cylinder(d = 3.5000000000, h = 10);
												}
												cylinder(d = 25.2000000000, h = 70);
											}
											translate(v = [-12.6000000000, 0, 0]) {
												cube(size = [25.2000000000, 13.1000000000, 70]);
											}
											translate(v = [-12.6000000000, 0, 5]) {
												cube(size = [25.2000000000, 20, 70]);
											}
										}
										translate(v = [0, 0, 136.5000000000]) {
											rotate(a = [180, 0, 180]) {
												difference() {
													union() {
														translate(v = [0, 0, -1.7500000000]) {
															cylinder(d = 28.7000000000, h = 70);
														}
														translate(v = [-14.3500000000, 0, -1.7500000000]) {
															cube(size = [28.7000000000, 14.3500000000, 70]);
														}
														translate(v = [-15.0000000000, 12.6000000000, -1.7500000000]) {
															cube(size = [30, 1.7500000000, 70]);
														}
													}
													union() {
														translate(v = [0, 0, -10]) {
															cylinder(d = 7, h = 10);
														}
														translate(v = [0, 8.5000000000, -10]) {
															cylinder(d = 3.5000000000, h = 10);
														}
														translate(v = [0, -8.5000000000, -10]) {
															cylinder(d = 3.5000000000, h = 10);
														}
														cylinder(d = 25.2000000000, h = 70);
													}
													translate(v = [-12.6000000000, 0, 0]) {
														cube(size = [25.2000000000, 13.1000000000, 70]);
													}
													translate(v = [-12.6000000000, 0, 5]) {
														cube(size = [25.2000000000, 20, 70]);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
#! /usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import division
import os
import sys

from solid import *
from solid.utils import *
import bumper
import cover
import motors_stand
import electronics
import mounts
import json
from functools import reduce

nuts_n_bolts = import_scad('/home/leonti/3d/openscad_libraries/nutsnbolts')
rplidar = import_stl('rplidar.stl')

SEGMENTS = 200

ACRYLIC_HEIGHT = 3

wheel = color("blue")(cylinder(d=67, h=27))
diff_drive = (
    translate([0, (177 + 27) / 2.0, 22.5])(rotate([90, 0, 0])
                                           (wheel + translate([0, 0, 177])(wheel)))
    + motors_stand.full
)

usb_connector = cube([18, 35, 8])
micro_usb_connector = cube([40, 10, 7])
BATTERY_WIDTH = 75.5
BATTERY_HEIGHT = 14.3
battery = (
    color("brown")(cube([BATTERY_WIDTH, 144, BATTERY_HEIGHT]))
    + color("black")(translate([11, 144, 3])(usb_connector))
    + color("black")(translate([47, 144, 3])(usb_connector))
    + color("black")(translate([75, 121, 3])(micro_usb_connector))
)
BATTERY_VERTICAL_POSTITION = 42

battery_stand_width = BATTERY_WIDTH + 8
battery_stand_height = BATTERY_VERTICAL_POSTITION + BATTERY_HEIGHT + 2

mount_hole = (
    nuts_n_bolts.cyl_head_bolt.nutcatch_parallel("M3", l=3, clk=0.5)
    + nuts_n_bolts.cyl_head_bolt.hole_through(name="M3", l=10, cld=0.5, h=0, hcld=0.4)
)


def battery_rear_stand(hole_placeholders=False):
    base = (
        cube([10, battery_stand_width, battery_stand_height])
        - translate([-1, 2, BATTERY_VERTICAL_POSTITION]
                    )(cube([10, BATTERY_WIDTH, BATTERY_HEIGHT]))
        - translate([-1, 12, 4])(cube([15, BATTERY_WIDTH - 20, 30]))
        + translate([0, (battery_stand_width / 2) - 10, 0])(cube([17, 20, 4]))
    )

    mount_holes_coords = [
        (5, 15),
        (5, 64),
        (13, (battery_stand_width / 2))
    ]

    mount_holes = reduce(lambda a, b: a + b, map(
        lambda xy: translate([xy[0], xy[1], 5])(mount_hole), mount_holes_coords)
    )

    if hole_placeholders is True:
        return base + mount_holes
    else:
        return base - mount_holes


def battery_front_stand(hole_placeholders=False):
    return (
        battery_rear_stand(hole_placeholders)
        - translate([-1, 2, BATTERY_VERTICAL_POSTITION]
                    )(cube([20, BATTERY_WIDTH, BATTERY_HEIGHT]))
    )


caster = (
    cylinder(d=17, h=15)
    + translate([0, -8, 0])(cylinder(d=6.5, h=15))
    + translate([0, 8, 0])(cylinder(d=6.5, h=15))
)

caster_holes = (
    translate([0, -8, 0])(cylinder(d=2.8, h=20))
    + translate([0, 8, 0])(cylinder(d=2.8, h=20))
    + translate([0, -8, 2])(cylinder(d=4.5, h=20))
    + translate([0, 8, 2])(cylinder(d=4.5, h=20))
)

RPLIDAR_WIDTH = 70.28
rplidar_full = (
    rotate([90, 0, 180])(rplidar)
    + translate([-45, 60, -3])(cube([20, 5, 12]))
)

rplidar_leg_hole = cylinder(d=6, h=5)
rplidar_leg = (
    cylinder(d=10, h=7)
    - translate([0, 0, 9])(nuts_n_bolts.cyl_head_bolt.hole_through(name="M3",
                                                                   l=10, cld=0.5, h=0, hcld=0.4))
    - translate([0, 0, 2])(cylinder(d=5.5, h=10))
)

rplidar_battery_wrap = (
    cube([10, battery_stand_width, BATTERY_HEIGHT + 4])
    - translate([-1, (battery_stand_width - BATTERY_WIDTH)/2, 2]
                )(cube([12, BATTERY_WIDTH, BATTERY_HEIGHT]))
)


def rplidar_legs(element, z=0):
    return (
        translate([0, 0, z])(element)
        + translate([0, 56, z])(element)
        + translate([-70, 8, z])(element)
        + translate([-70, 48, z])(element)
    )


rplidar_stand = (
    rplidar_legs(rplidar_leg)
    + translate([-25, -(battery_stand_width - 56)/2, -
                 (BATTERY_HEIGHT + 4)])(rplidar_battery_wrap)
    + translate([-75, -(battery_stand_width - 56)/2, -
                 (BATTERY_HEIGHT + 4)])(rplidar_battery_wrap)
    + translate([-20, -7.5, -2])(cube([25, 15, 2]))
    + translate([-20, 48.5, -2])(cube([25, 15, 2]))
    + translate([-70, (56 - 15)/2, -2])(cube([55, 15, 2]))
    - rplidar_legs(cylinder(d=6, h=20), -20.5)
    - rplidar_legs(cylinder(d=3, h=30), -20)
)


def battery_rear_stand_with_caster(hole_placeholders=False):

    base = color([1.0, 1.0, 1.0, 0.7])(
        battery_rear_stand(hole_placeholders)
        + translate([-10, battery_stand_width / 2 - 20, 0])(cube([10, 40, 4]))
        - translate([0, battery_stand_width / 2, -14])(caster)
        - translate([0, battery_stand_width / 2, 0])(caster_holes)
    )

    if hole_placeholders is True:
        return (base
                + translate([0, battery_stand_width / 2, -14])(caster)
                + translate([0, battery_stand_width / 2, 0])(caster_holes)
                )
    else:
        return base


def battery_with_lidar(hole_placeholders=False):
    return translate([-9, 0, 0])((
        translate([100, -BATTERY_WIDTH/2.0, ACRYLIC_HEIGHT +
                   BATTERY_VERTICAL_POSTITION])(rotate([0, 0, 90])(battery))
        + translate([92, -(battery_stand_width / 2), ACRYLIC_HEIGHT]
                    )(battery_rear_stand_with_caster(hole_placeholders))
        + translate([-35, (battery_stand_width / 2), ACRYLIC_HEIGHT]
                    )(rotate([0, 0, 180])(battery_front_stand(hole_placeholders)))
        + translate([65, -RPLIDAR_WIDTH/2, 66])(color("grey")(rplidar_full))
        + translate([58, -28, 61])(rplidar_stand)
    ))


wheel_cutout_right = translate([-35, 70, -1])(cube([70, 40, 5]))
acrylic_base = color([1.0, 1.0, 1.0, 0.9])(
    cylinder(d=208, h=ACRYLIC_HEIGHT)
    - wheel_cutout_right
    - mirror([0, 1, 0])(wheel_cutout_right)
    - cover.for_holes
    - motors_stand.full_for_holes
    - bumper.for_holes
    - battery_with_lidar(True)
)

full = (
    acrylic_base
    + translate([0, 0, 0])(diff_drive)
    + battery_with_lidar()
    + electronics.full
    + translate([0, 0, -2.6])(bumper.bumper)
    + translate([0, 0, -1.5])(cover.full)
)

full_exploded = (
    acrylic_base
    + translate([0, 0, 0])(diff_drive)
    + translate([-9, 0, 0])(battery_with_lidar())
    + electronics.full
    + translate([0, 0, -2.6])(bumper.bumper)
    + translate([0, 0, -1.5])(cover.full_exploded)
)

stls = [
    {'name': 'motors_stand', 'obj': motors_stand.full,
     'title': 'Motors holder',
     'desc': '''Central part of the robot body, make sure to either print with 100%% infill or
     with sufficiently thick walls. I used 1.2mm.
     Slide m3 screws at the top and use BlueTak or some glue to keep them from moving.   
    '''},
    {'name': 'battery_rear_holder', 'obj': battery_rear_stand_with_caster(),
        'title': 'Battery holder (rear)',
        'desc': 'Use screws that come with the caster to screw it to the PLA'},
    {'name': 'battery_front_stand', 'obj': battery_front_stand(),
        'title': 'Battery holder (front)',
        'desc': ''
     },
    {'name': 'rplidar_stand', 'obj': rplidar_stand,
        'title': 'Lidar Stand',
        'desc': 'Be careful when removing supports as it is pretty thin and might break'},
    {'name': 'cover_back_left', 'obj': cover.back_left,
        'title': 'Rear cover (left)',
        'desc': ''},
    {'name': 'cover_back_right', 'obj': cover.back_right,
        'title': 'Rear cover (right)',
        'desc': ''},
    {'name': 'cover_back_top_plate', 'obj': cover.back_top_plate,
        'title': 'Top plate for rear cover',
        'desc': ''},
    {'name': 'cover_front_left', 'obj': cover.front_left,
        'title': 'Front cover (left)',
        'desc': ''},
    {'name': 'cover_front_right', 'obj': cover.front_right,
        'title': 'Front cover (right)',
        'desc': ''},
    {'name': 'cover_front_top_plate', 'obj': cover.front_top_plate,
        'title': 'Top plate for front cover',
        'desc': ''},
    {'name': 'cover_left_side_plate', 'obj': cover.left_side_plate,
        'title': 'Left top cover',
        'desc': 'The LED hole is for 5mm LED, might need gentle filing for a tight fit'},
    {'name': 'cover_right_side_plate', 'obj': cover.right_side_plate,
        'title': 'Right top cover',
        'desc': ''},
    {'name': 'cover_front_left_support', 'obj': cover.front_left_support,
        'title': 'Left front cover support leg',
        'desc': ''},
    {'name': 'cover_front_right_support', 'obj': cover.front_right_support,
        'title': 'Right front cover support leg',
        'desc': ''},
    {'name': 'cover_front_support', 'obj': bumper.bumper_base + cover.front_support,
        'title': 'Bumper base',
        'desc': 'Make sure to clean up supports and file space underneth the switches so bumpers can move smoothly'
     },
    {'name': 'left_bumper', 'obj': bumper.bumper_left,
        'title': 'Left bumper',
        'desc': ''
     },
    {'name': 'right_bumper', 'obj': bumper.bumper_right,
        'title': 'Right bumper',
        'desc': ''
     },
    {'name': 'left_bumper_stopper', 'obj': bumper.bumper_stopper_left,
        'title': 'Left bumper stopper',
        'desc': 'Make sure to clean it up as it is a tight fit'
     },
    {'name': 'right_bumper_stopper', 'obj': bumper.bumper_stopper_right,
        'title': 'Right bumper stopper',
        'desc': ''
     },
    {'name': 'cover_lidar_cover', 'obj': cover.lidar_cover,
        'title': 'Lidar cover',
        'desc': 'It\'s wider on top to easily grab the robot by hand and move it if necessary'
     },
    {'name': 'acrylic_base', 'obj': acrylic_base,
     'title': 'Acrylic plate base',
     'desc': 'If you have a big enough printer print this, otherwise cut it out of an acrylic plate'
     }
]


def save_stl_defs():
    with open('stls.json', 'w') as fh:
        fh.write(json.dumps(list(map(lambda x: {
                 'name': x['name'], 'title': x['title'], 'desc': x['desc']}, stls)), indent=2))


def render_stls():
    for stl in stls:
        name = stl['name']
        print(f'Rendering {name}')
        scad_render_to_file(stl['obj'], os.path.join(
            out_dir, 'to_render.scad'), file_header='$fn = %s;' % SEGMENTS)
        os.system(f'openscad -o stl/{name}.stl ./to_render.scad')


if __name__ == '__main__':
    out_dir = sys.argv[1] if len(sys.argv) > 1 else os.curdir
    file_out = os.path.join(out_dir, 'chassis.scad')

    a = full
    save_stl_defs()
#    render_stls() # run to render all stls
#    a = projection(cut = True)(acrylic_base)

    print("%(__file__)s: SCAD file written to: \n%(file_out)s" % vars())

    # Adding the file_header argument as shown allows you to change
    # the detail of arcs by changing the SEGMENTS variable.  This can
    # be expensive when making lots of small curves, but is otherwise
    # useful.
    scad_render_to_file(a, file_out, file_header='$fn = %s;' % SEGMENTS)
 
 
************************************************/
